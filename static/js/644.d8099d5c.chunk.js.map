{"version":3,"file":"static/js/644.d8099d5c.chunk.js","mappings":"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","sources":["components/ModalNewGamebook/ModalNewGameBook.tsx","components/ModalNewGamebook/index.ts","pages/HomePage/HomePage.tsx","pages/HomePage/index.tsx","redux/reduxHooks.ts"],"sourcesContent":["import { Button, Form, Input, Modal, Space, Typography } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { createNewGamebookDB } from 'redux/gameBookSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { CONFIG } from 'configuration';\nimport { ModalProps } from 'configuration/interfaces';\n\ninterface ModalNewGameBookProps extends ModalProps {}\n\nconst ModalNewGameBookStyled = styled.div`\n    // put some styles here\n`;\n\nconst { Paragraph } = Typography;\n\nexport const ModalNewGameBook: React.FC<ModalNewGameBookProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const [form] = Form.useForm();\n    const dispach = useAppDispatch();\n    const { introduction } = useAppSelector(state => state.gamebook);\n    let navigate = useNavigate();\n\n    const onFinish = async (values: any) => {\n        const { authorName, gamebookTitle } = values;\n        dispach(\n            createNewGamebookDB({\n                authorName: authorName.trim(),\n                gamebookTitle: gamebookTitle.trim(),\n                introduction,\n            })\n        );\n        form.resetFields();\n        setIsVisible(false);\n        navigate(`/editor`);\n    };\n\n    const handleCancel = () => {\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalNewGameBookStyled>\n            <Modal\n                title='Create new gamebook'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n            >\n                <Form\n                    form={form}\n                    layout='vertical'\n                    autoComplete='off'\n                    requiredMark='optional'\n                    onFinish={onFinish}\n                    initialValues={{\n                        authorName: '',\n                        gamebookTitle: '',\n                    }}\n                >\n                    <Form.Item\n                        label={`Author's name`}\n                        name='authorName'\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input author's name!\",\n                            },\n                            {\n                                min: CONFIG.AUHOR_NAME_LENGTH_MIN,\n                                message: `Name min ${CONFIG.AUHOR_NAME_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.AUHOR_NAME_LENGTH_MAX,\n                                message: `Name max ${CONFIG.AUHOR_NAME_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. John Doe' />\n                    </Form.Item>\n                    <Form.Item\n                        label='Title'\n                        name='gamebookTitle'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input gamebook main title!',\n                            },\n                            {\n                                min: CONFIG.CHAPTER_TITLE_LENGTH_MIN,\n                                message: `Name min ${CONFIG.CHAPTER_TITLE_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.CHAPTER_TITLE_LENGTH_MAX,\n                                message: `Name max ${CONFIG.CHAPTER_TITLE_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. New Journey of Halflings' />\n                    </Form.Item>\n                    <Paragraph type='warning'>\n                        Please note, creating a new project will overwrite an\n                        existing project already stored in your web browser's\n                        DataBase. If you wish, export it to a file first.\n                    </Paragraph>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Space size='middle'>\n                            <Button onClick={handleCancel}>Cancel</Button>\n                            <Button danger htmlType='submit'>\n                                Submit\n                            </Button>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalNewGameBookStyled>\n    );\n};\n","import { ModalNewGameBook } from './ModalNewGameBook';\nexport default ModalNewGameBook;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button, Typography, Row, Col, ColProps, Space } from 'antd';\nimport ModalNewGameBook from 'components/ModalNewGamebook';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { checkDB, dropDB } from 'redux/gameBookSlice';\nimport { useNavigate } from 'react-router-dom';\nimport ModalOpenRecent from 'components/ModalOpenRecent/ModalOpenRecent';\n\ninterface HomePageProps {}\nconst { Text, Title } = Typography;\n\nconst HomePageStyled: React.FC<ColProps> = styled(Col)`\n    // put some styles here\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const HomePage: React.FC<HomePageProps> = () => {\n    let navigate = useNavigate();\n    const dispatch = useAppDispatch();\n    const { isDbMetadata } = useAppSelector(state => state.gamebook);\n    const [isModalNewGameVisible, setIsModalNewGameVisible] =\n        React.useState(false);\n    const [isModalOpenRecentVisible, setIsModalOpenRecentVisible] =\n        React.useState(true);\n\n    React.useEffect(() => {\n        dispatch(checkDB());\n        return () => {};\n    }, [dispatch]);\n\n    const handleShowNewGameBookModal = () => {\n        setIsModalNewGameVisible(true);\n    };\n    const handleOpenCurrentProject = () => {\n        navigate(`/editor`);\n    };\n    const year = new Date().getFullYear();\n\n    return (\n        <>\n            <Row justify='center'>\n                <HomePageStyled>\n                    <Title level={1}>GameBook Creator</Title>\n                    <Text style={{ marginBottom: '1rem' }}>\n                        A gamebook is a work of printed fiction that allows the\n                        reader to participate in the story by making choices.\n                    </Text>\n                    <Text style={{ marginBottom: '2rem' }}>\n                        &copy; Grzegorz Kossowski 2022{' '}\n                        {year > 2022 && `- ${year}`}\n                    </Text>\n                    <Row style={{ width: '100%' }} justify='center'>\n                        <Col>\n                            <Space direction='vertical' size='middle'>\n                                <Button\n                                    block\n                                    onClick={handleShowNewGameBookModal}\n                                >\n                                    New\n                                </Button>\n                                <Button\n                                    block\n                                    onClick={handleOpenCurrentProject}\n                                    disabled={!isDbMetadata}\n                                >\n                                    Open recent\n                                </Button>\n                                <Button block disabled>\n                                    Import (*.gbf)\n                                </Button>\n                                <Button block disabled>\n                                    Docs\n                                </Button>\n                                <Button\n                                    block\n                                    danger\n                                    onClick={() => dispatch(dropDB())}\n                                >\n                                    Delete DB\n                                </Button>\n                            </Space>\n                        </Col>\n                    </Row>\n                </HomePageStyled>\n            </Row>\n            {/* Modals */}\n            <ModalNewGameBook\n                isVisible={isModalNewGameVisible}\n                setIsVisible={setIsModalNewGameVisible}\n            />\n            {/* <ModalOpenRecent\n                isVisible={isModalOpenRecentVisible}\n                setIsVisible={setIsModalOpenRecentVisible}\n            /> */}\n        </>\n    );\n};\n","import { HomePage } from './HomePage';\nexport default HomePage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["ModalNewGameBookStyled","styled","Paragraph","Typography","isVisible","setIsVisible","Form","form","dispach","useAppDispatch","introduction","useAppSelector","state","gamebook","navigate","useNavigate","onFinish","values","authorName","gamebookTitle","createNewGamebookDB","trim","resetFields","handleCancel","title","visible","onCancel","footer","layout","autoComplete","requiredMark","initialValues","label","name","rules","required","message","min","CONFIG","max","placeholder","type","style","textAlign","size","onClick","danger","htmlType","Text","Title","HomePageStyled","Col","dispatch","isDbMetadata","React","isModalNewGameVisible","setIsModalNewGameVisible","checkDB","year","Date","getFullYear","justify","level","marginBottom","width","direction","block","disabled","dropDB","useDispatch","useSelector"],"sourceRoot":""}
{"version":3,"file":"static/js/426.dcdb4d1c.chunk.js","mappings":"+SACA,ECW6B,SAAC,GAAqD,IAAnDA,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,IAAKC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,IAC5D,OACI,gCACKD,IACG,SAAC,IAAD,CACIE,KAAMC,EAAAA,GACNC,KAAK,KACLC,MAAO,CAAEC,YAAa,UAG7BR,IACG,SAAC,IAAD,CACII,KAAMK,EAAAA,IACNH,KAAK,KACLC,MAAO,CAAEC,YAAa,UAG7BV,IACG,SAAC,IAAD,CACIM,KAAMM,EAAAA,IACNJ,KAAK,KACLC,MAAO,CAAEC,YAAa,UAG7BT,IACG,SAAC,IAAD,CACIK,KAAMO,EAAAA,IACNL,KAAK,KACLC,MAAO,CAAEC,YAAa,UAG7BL,IACG,SAAC,IAAD,CACIC,KAAMQ,EAAAA,IACNN,KAAK,KACLC,MAAO,CAAEC,YAAa,QACtBK,MAAM,SAGbZ,GACG,SAAC,IAAD,CACIG,KAAMU,EAAAA,IACNR,KAAK,KACLC,MAAO,CAAEC,YAAa,QACtBK,MAAM,WAGV,SAAC,IAAD,CACIT,KAAMW,EAAAA,IACNT,KAAK,KACLC,MAAO,CAAEC,YAAa,QACtBK,MAAM,YCvDlBG,EAASC,EAAAA,EAAAA,KAEXC,EAAqBC,EAAAA,GAAAA,IAAH,yvBCTxB,EDyC0D,WACtD,OAAiCC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,YAAvDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZC,GAAUC,EAAAA,EAAAA,KAChB,EAA8CC,EAAAA,SAAeH,GAA7D,eAAOI,EAAP,KAAwBC,EAAxB,KAWA,OAJAF,EAAAA,WAAgB,WACZ,OAAO,eACR,CAACC,KAGA,UAACV,EAAD,YACI,SAAC,IAAD,CAAOY,YAAY,6BAA6BxB,KAAK,WACrD,eAAIyB,UAAU,YAAd,SACKR,EAASS,KAAI,SAAAC,GACV,OACI,gBAEIF,UAAS,4BACLE,EAAQC,KAAOV,EACT,qBACA,IAEVW,QAAS,kBAtBZD,EAsB8BD,EAAQC,GArBvDL,EAAmBK,QACnBT,GAAQW,EAAAA,EAAAA,IAAqBF,IAFb,IAACA,GAeD,WASI,SAAClB,EAAD,oBACQiB,EAAQI,cADhB,aAEQJ,EAAQK,MAAMC,OAAS,GACjBN,EAAQK,MAAME,MAAM,EAAG,IAAM,MAC7BP,EAAQK,UAGtB,0BACY,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASQ,UACN,SAAC,GAAD,UAAmBR,EAAQQ,aAjB9BR,EAAQC,a,oBEzDnCQ,EAAsBvB,EAAAA,GAAAA,IAAH,qDCLzB,EDS2D,WACvD,MAAewB,EAAAA,EAAAA,UAARC,GAAP,eACA,OACI,SAACF,EAAD,WACI,UAAC,IAAD,CAAME,KAAMA,EAAMC,aAAa,MAAMC,OAAO,WAAWxC,KAAK,QAA5D,WACI,SAAC,SAAD,CAAWyC,MAAM,QAAjB,UACI,SAAC,IAAD,OAEJ,SAAC,SAAD,CAAWA,MAAM,YAAjB,UACI,SAAC,aAAD,OAEJ,SAAC,SAAD,WACI,SAAC,IAAD,2B,4BEXZC,EAAqB/B,EAAAA,EAAAA,UAAVgC,EAAUhC,EAAAA,EAAAA,MAEvBiC,EAA0B/B,EAAAA,GAAAA,IAAH,qDCZ7B,EDgBmE,SAAC,GAG7D,IAFHgC,EAEE,EAFFA,UACAC,EACE,EADFA,aAEMC,GAAW3B,EAAAA,EAAAA,KACjB,GAAsCN,EAAAA,EAAAA,IAClC,SAAAC,GAAK,OAAIA,EAAMC,YADXgC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAGpB,EAA4B5B,EAAAA,SAAe2B,GAA3C,eAAOE,EAAP,KAAeC,EAAf,KACA,EAA0B9B,EAAAA,SAAe4B,GAAzC,eAAOjB,EAAP,KAAcoB,EAAd,KAYA,OACI,SAACR,EAAD,WACI,UAAC,IAAD,CACIZ,MAAM,gCACNqB,QAASR,EAETS,OAAQ,KACRC,SAXS,WACjBT,GAAa,IAKT,WAOI,SAACH,EAAD,CAAOa,MAAO,EAAd,qBACA,SAACd,EAAD,CACIe,SAAU,CACN3D,MAAM,SAAC4D,EAAA,EAAD,IACNC,QAAS,qBACTC,SAAUT,GAJlB,SAOKD,KAEL,SAACP,EAAD,CAAOa,MAAO,EAAd,oBACA,SAACd,EAAD,CACIe,SAAU,CACN3D,MAAM,SAAC4D,EAAA,EAAD,IACNC,QAAS,qBACTC,SAAUR,GAJlB,SAOKpB,KAEL,SAAC,IAAD,WACI,SAAC,IAAD,CACI6B,KAAM,GACN5D,MAAO,CAAE6D,QAAS,OAAQC,eAAgB,OAF9C,UAII,SAAC,IAAD,CAAQlC,QA5CC,WACzBkB,GAASiB,EAAAA,EAAAA,IAAkBd,IAC3BH,GAASkB,EAAAA,EAAAA,IAAiBjC,KA0CV,4BEtDlBkC,EAAgBrD,EAAAA,GAAAA,IAAH,qDAIbsD,EAA4B,CAC9B,CACI1B,MAAO,OACP2B,IAAK,OACLC,SAAU,CACN,CACI5B,MAAO,WACP2B,IAAK,UACLtE,MAAM,SAAC,IAAD,CAAiBA,KAAMwE,EAAAA,MAC7BC,UAAU,GAEd,CACI9B,MAAO,gBACP2B,IAAK,eACLtE,MAAM,SAAC,IAAD,CAAiBA,KAAM0E,EAAAA,MAC7BD,UAAU,KAItB,CACI9B,MAAO,OACP2B,IAAK,cACLC,SAAU,CACN,CACI5B,MAAO,kBACP2B,IAAK,gBACLG,UAAU,EACVzE,MAAM,SAAC,IAAD,CAAiBA,KAAM2E,EAAAA,OAEjC,CACIhC,MAAO,oBACP2B,IAAK,mBACLG,UAAU,EACVzE,MAAM,SAAC,IAAD,CAAiBA,KAAM4E,EAAAA,OAEjC,CACIjC,MAAO,aACP2B,IAAK,iBACLG,UAAU,EACVzE,MAAM,SAAC,IAAD,CAAiBA,KAAM6E,EAAAA,OAEjC,CACIlC,MAAO,WACP2B,IAAK,WACLG,UAAU,EACVzE,MAAM,SAAC,IAAD,CAAiBA,KAAM8E,EAAAA,SAIzC,CACInC,MAAO,SACP2B,IAAK,aAELC,SAAU,CACN,CACI5B,MAAO,iBACP2B,IAAK,aACLG,UAAU,EACVzE,MAAM,SAAC,IAAD,CAAiBA,KAAM+E,EAAAA,OAEjC,CACIpC,MAAO,gBACP2B,IAAK,YACLG,UAAU,EACVzE,MAAM,SAAC,IAAD,CAAiBA,KAAMgF,EAAAA,OAEjC,CACIrC,MAAO,gBACP2B,IAAK,YACLG,UAAU,EACVzE,MAAM,SAAC,IAAD,CAAiBA,KAAMiF,EAAAA,SAIzC,CACItC,MAAO,eACP2B,IAAK,cACLG,UAAU,IClGlB,EDsG+C,WAC3C,MAA8BlD,EAAAA,SAAe,QAA7C,eAAO2D,EAAP,KAAgBC,EAAhB,KACA,EACI5D,EAAAA,UAAe,GADnB,eAAO6D,EAAP,KAAmCC,EAAnC,KAOA,OACI,iCACI,SAACjB,EAAD,WACI,SAAC,IAAD,CACIrC,QARsB,SAAAuD,GAClCC,QAAQC,IAAI,SAAUF,GACtBH,EAAWG,EAAEhB,MAODmB,aAAc,CAACP,GACfQ,KAAK,aACLrB,MAAOA,OAGf,SAAC,EAAD,CACItB,UAAWqC,EACXpC,aAAcqC,QE1GxBM,EAAmB5E,EAAAA,GAAAA,IAAH,meA0DtB,EArC+C,SAAC,GAAqB,oBACjE,OACI,UAAC4E,EAAD,YACI,SAAC,EAAD,KACA,UAAC,IAAD,YACI,SAAC,IAAD,CACIhE,UAAU,0BACViE,GAAI,CAAE7B,KAAM,GAAI8B,MAAO,GACvBC,GAAI,CAAE/B,KAAM,GAAI8B,MAAO,GACvBE,GAAI,CAAEhC,KAAM,GAAI8B,MAAO,GACvBG,GAAI,CAAEjC,KAAM,EAAG8B,MAAO,GAL1B,UAOI,SAAC,EAAD,OAEJ,SAAC,IAAD,CACIlE,UAAU,mBACViE,GAAI,CAAE7B,KAAM,GAAI8B,MAAO,GACvBC,GAAI,CAAE/B,KAAM,GAAI8B,MAAO,GACvBE,GAAI,CAAEhC,KAAM,GAAI8B,MAAO,GACvBG,GAAI,CAAEjC,KAAM,GAAI8B,MAAO,GAL3B,UAOI,SAAC,EAAD,OAEJ,SAAC,IAAD,CACIlE,UAAU,wBACViE,GAAI,CAAE7B,KAAM,GAAI8B,MAAO,GACvBC,GAAI,CAAE/B,KAAM,GAAI8B,MAAO,GACvBE,GAAI,CAAEhC,KAAM,GAAI8B,MAAO,GACvBG,GAAI,CAAEjC,KAAM,EAAG8B,MAAO,a,0FC/D7BvE,EAAiB,kBAAM2E,EAAAA,EAAAA,OACvBjF,EAAkDkF,EAAAA","sources":["components/ChaptersTree/ChapterStatus/index.ts","components/ChaptersTree/ChapterStatus/ChapterStatus.tsx","components/ChaptersTree/ChaptersTree.tsx","components/ChaptersTree/index.ts","components/ChapterEditor/ChapterEditor.tsx","components/ChapterEditor/index.ts","components/ModalEditMetadata/ModalEditMetadata.tsx","components/ModalEditMetadata/index.ts","components/TopMenu/TopMenu.tsx","components/TopMenu/index.ts","pages/EditorPage/EditorPage.tsx","redux/reduxHooks.ts"],"sourcesContent":["import { ChapterStatus } from './ChapterStatus';\nexport default ChapterStatus;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSkullCrossbones,\n    faTrophy,\n    faPlay,\n    faCircleCheck,\n    faCircleXmark,\n    faCircleStop,\n    faThumbTack,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Status } from 'configuration/interfaces';\n\nexport const ChapterStatus = ({ dead, end, fixed, ready, start, win }: Status) => {\n    return (\n        <>\n            {start && (\n                <FontAwesomeIcon\n                    icon={faPlay}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {fixed && (\n                <FontAwesomeIcon\n                    icon={faThumbTack}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {dead && (\n                <FontAwesomeIcon\n                    icon={faSkullCrossbones}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {end && (\n                <FontAwesomeIcon\n                    icon={faCircleStop}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {win && (\n                <FontAwesomeIcon\n                    icon={faTrophy}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='gold'\n                />\n            )}\n            {ready ? (\n                <FontAwesomeIcon\n                    icon={faCircleCheck}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='green'\n                />\n            ) : (\n                <FontAwesomeIcon\n                    icon={faCircleXmark}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='red'\n                />\n            )}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Input, Typography } from 'antd';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { setSelectedChapterId } from 'redux/gameBookSlice';\nimport ChapterStatus from './ChapterStatus';\n\ninterface IChaptersTreeProps {}\nconst { Text } = Typography;\n\nconst ChaptersTreeStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    /* border: 1px solid #444; */\n    padding: 10px;\n\n    .tree-list {\n        overflow-y: auto;\n        height: calc(100% - 50px);\n        border: 1px solid #444;\n        margin: 10px 0;\n        list-style-type: none;\n        padding-left: 15px;\n        li {\n            width: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            font-size: 1.2rem;\n            color: #bbb;\n            margin: 10px 0px;\n            padding: 5px 0;\n            &:hover {\n                background-color: #222;\n            }\n        }\n        &_selected {\n            background-color: #222;\n        }\n    }\n`;\n\nexport const ChaptersTree: React.FC<IChaptersTreeProps> = () => {\n    const { chapters, selectedId } = useAppSelector(state => state.gamebook);\n    const dispach = useAppDispatch();\n    const [selectedIdState, setSelectedIdState] = React.useState(selectedId);\n\n    const handleClick = (id: string) => {\n        setSelectedIdState(id);\n        dispach(setSelectedChapterId(id));\n    };\n\n    React.useEffect(() => {\n        return () => {};\n    }, [selectedIdState]);\n\n    return (\n        <ChaptersTreeStyled>\n            <Input placeholder='Filter paragraphs by title' size='large' />\n            <ul className='tree-list'>\n                {chapters.map(chapter => {\n                    return (\n                        <li\n                            key={chapter.id}\n                            className={`tree-list_chapter ${\n                                chapter.id === selectedId\n                                    ? 'tree-list_selected'\n                                    : ''\n                            }`}\n                            onClick={() => handleClick(chapter.id)}\n                        >\n                            <Text>\n                                {`${chapter.chapterNumber}) ${\n                                    chapter.title.length > 30\n                                        ? chapter.title.slice(0, 30) + '...'\n                                        : chapter.title\n                                }`}\n                            </Text>\n                            <div>\n                                {chapter?.status && (\n                                    <ChapterStatus {...chapter.status} />\n                                )}\n                            </div>\n                        </li>\n                    );\n                })}\n            </ul>\n        </ChaptersTreeStyled>\n    );\n};\n","import { ChaptersTree } from './ChaptersTree';\nexport default ChaptersTree;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Form, Input, Button } from 'antd';\n\ninterface ChapterEditorProps {}\n\nconst ChapterEditorStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ChapterEditor: React.FC<ChapterEditorProps> = () => {\n    const [form] = Form.useForm();\n    return (\n        <ChapterEditorStyled>\n            <Form form={form} autoComplete='off' layout='vertical' size='large'>\n                <Form.Item label='Title'>\n                    <Input />\n                </Form.Item>\n                <Form.Item label='Paragraph'>\n                    <Input.TextArea />\n                </Form.Item>\n                <Form.Item>\n                    <Button>Save</Button>\n                </Form.Item>\n            </Form>\n        </ChapterEditorStyled>\n    );\n};\n","import { ChapterEditor } from './ChapterEditor';\nexport default ChapterEditor;\n","import { Button, Col, Modal, Row, Typography } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { HighlightOutlined } from '@ant-design/icons';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { setGamebookAuthor, setGamebookTitle } from 'redux/gameBookSlice';\n\ninterface ModalEditMetadataProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\nconst { Paragraph, Title } = Typography;\n\nconst ModalEditMetadataStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalEditMetadata: React.FC<ModalEditMetadataProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n    const { authorName, gamebookTitle } = useAppSelector(\n        state => state.gamebook\n    );\n    const [author, setAuthor] = React.useState(authorName);\n    const [title, setTitle] = React.useState(gamebookTitle);\n\n    const handleMetadataChange = () => {\n        dispatch(setGamebookAuthor(author));\n        dispatch(setGamebookTitle(title));\n    };\n\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalEditMetadataStyled>\n            <Modal\n                title='View / Edit gamebook metadata'\n                visible={isVisible}\n                // onCancel={handleCancel}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Title level={5}>Author</Title>\n                <Paragraph\n                    editable={{\n                        icon: <HighlightOutlined />,\n                        tooltip: 'click to edit text',\n                        onChange: setAuthor,\n                    }}\n                >\n                    {author}\n                </Paragraph>\n                <Title level={5}>Title</Title>\n                <Paragraph\n                    editable={{\n                        icon: <HighlightOutlined />,\n                        tooltip: 'click to edit text',\n                        onChange: setTitle,\n                    }}\n                >\n                    {title}\n                </Paragraph>\n                <Row>\n                    <Col\n                        span={24}\n                        style={{ display: 'flex', justifyContent: 'end' }}\n                    >\n                        <Button onClick={handleMetadataChange}>Save</Button>\n                    </Col>\n                </Row>\n            </Modal>\n        </ModalEditMetadataStyled>\n    );\n};\n","import { ModalEditMetadata } from './ModalEditMetadata';\nexport default ModalEditMetadata","import { Menu, MenuProps } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faBook,\n    faFileLines,\n    faFilePdf,\n    faFileCode,\n    faChartPie,\n    faBookOpen,\n} from '@fortawesome/free-solid-svg-icons';\nimport ModalEditMetadata from 'components/ModalEditMetadata';\ninterface TopMenuProps {}\n\nconst TopMenuStyled = styled.div`\n    // put some styles here\n`;\n\nconst items: MenuProps['items'] = [\n    {\n        label: 'File',\n        key: 'File',\n        children: [\n            {\n                label: 'New book',\n                key: 'newBook',\n                icon: <FontAwesomeIcon icon={faBook} />,\n                disabled: true,\n            },\n            {\n                label: 'Oper existing',\n                key: 'openExisting',\n                icon: <FontAwesomeIcon icon={faFolderOpen} />,\n                disabled: true,\n            },\n        ],\n    },\n    {\n        label: 'Book',\n        key: 'bookOptions',\n        children: [\n            {\n                label: 'Add new chapter',\n                key: 'addNewChapter',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCirclePlus} />,\n            },\n            {\n                label: 'Schuffle chapters',\n                key: 'schuffleChapters',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faDice} />,\n            },\n            {\n                label: 'Statistics',\n                key: 'bookStatistics',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faChartPie} />,\n            },\n            {\n                label: 'Metadata',\n                key: 'metadata',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faBookOpen} />,\n            },\n        ],\n    },\n    {\n        label: 'Export',\n        key: 'exportBook',\n        // disabled: true,\n        children: [\n            {\n                label: 'Export to HTML',\n                key: 'exportHtml',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCode} />,\n            },\n            {\n                label: 'Export to PDF',\n                key: 'exportPdf',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFilePdf} />,\n            },\n            {\n                label: 'Export to TXT',\n                key: 'exportTxt',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileLines} />,\n            },\n        ],\n    },\n    {\n        label: 'Html Preview',\n        key: 'previewBook',\n        disabled: true,\n    },\n];\n\nexport const TopMenu: React.FC<TopMenuProps> = () => {\n    const [current, setCurrent] = React.useState('mail');\n    const [isModalEditMetadataVisible, setIsModalEditMetadataVisible] =\n        React.useState(false);\n\n    const onClick: MenuProps['onClick'] = e => {\n        console.log('click ', e);\n        setCurrent(e.key);\n    };\n    return (\n        <>\n            <TopMenuStyled>\n                <Menu\n                    onClick={onClick}\n                    selectedKeys={[current]}\n                    mode='horizontal'\n                    items={items}\n                />\n            </TopMenuStyled>\n            <ModalEditMetadata\n                isVisible={isModalEditMetadataVisible}\n                setIsVisible={setIsModalEditMetadataVisible}\n            />\n        </>\n    );\n};\n","import { TopMenu } from './TopMenu';\nexport default TopMenu;\n","import { Col, Menu, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faFileWord,\n} from '@fortawesome/free-solid-svg-icons';\nimport MainMenu from 'components/MainMenu';\nimport ChaptersTree from 'components/ChaptersTree';\nimport ChapterEditor from 'components/ChapterEditor';\nimport GraphTree from 'components/GraphTree';\nimport TopMenu from 'components/TopMenu';\n\ninterface IEditorPageProps {}\n\nconst EditorPageStyled = styled.div`\n    // put some styles here\n    height: 100vh;\n    /* border: 1px solid red; */\n    .sidebar__tree-container {\n        /* border: 1px solid blue; */\n        width: 25%;\n        height: calc(100vh - 86px);\n        overflow-y: hidden;\n    }\n    .graph__tree-container {\n        width: 25%;\n        height: calc(100vh - 86px);\n        /* background-color: #222; */\n    }\n    .editor-container {\n        padding: 10px;\n        width: 50%;\n    }\n`;\n\nconst EditorPage: React.FC<IEditorPageProps> = ({ ...restProps }) => {\n    return (\n        <EditorPageStyled>\n            <TopMenu />\n            <Row>\n                <Col\n                    className='sidebar__tree-container'\n                    xs={{ span: 24, order: 2 }}\n                    md={{ span: 12, order: 2 }}\n                    lg={{ span: 10, order: 1 }}\n                    xl={{ span: 6, order: 1 }}\n                >\n                    <ChaptersTree />\n                </Col>\n                <Col\n                    className='editor-container'\n                    xs={{ span: 24, order: 1 }}\n                    md={{ span: 24, order: 1 }}\n                    lg={{ span: 14, order: 2 }}\n                    xl={{ span: 12, order: 2 }}\n                >\n                    <ChapterEditor />\n                </Col>\n                <Col\n                    className='graph__tree-container'\n                    xs={{ span: 24, order: 3 }}\n                    md={{ span: 12, order: 3 }}\n                    lg={{ span: 24, order: 3 }}\n                    xl={{ span: 6, order: 3 }}\n                >\n                    {/* <GraphTree data={[]} /> */}\n                </Col>\n            </Row>\n        </EditorPageStyled>\n    );\n};\n\nexport default EditorPage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["dead","end","fixed","ready","start","win","icon","faPlay","size","style","marginRight","faThumbTack","faSkullCrossbones","faCircleStop","faTrophy","color","faCircleCheck","faCircleXmark","Text","Typography","ChaptersTreeStyled","styled","useAppSelector","state","gamebook","chapters","selectedId","dispach","useAppDispatch","React","selectedIdState","setSelectedIdState","placeholder","className","map","chapter","id","onClick","setSelectedChapterId","chapterNumber","title","length","slice","status","ChapterEditorStyled","Form","form","autoComplete","layout","label","Paragraph","Title","ModalEditMetadataStyled","isVisible","setIsVisible","dispatch","authorName","gamebookTitle","author","setAuthor","setTitle","visible","footer","onCancel","level","editable","HighlightOutlined","tooltip","onChange","span","display","justifyContent","setGamebookAuthor","setGamebookTitle","TopMenuStyled","items","key","children","faBook","disabled","faFolderOpen","faFileCirclePlus","faDice","faChartPie","faBookOpen","faFileCode","faFilePdf","faFileLines","current","setCurrent","isModalEditMetadataVisible","setIsModalEditMetadataVisible","e","console","log","selectedKeys","mode","EditorPageStyled","xs","order","md","lg","xl","useDispatch","useSelector"],"sourceRoot":""}
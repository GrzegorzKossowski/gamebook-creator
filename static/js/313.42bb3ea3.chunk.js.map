{"version":3,"file":"static/js/313.42bb3ea3.chunk.js","mappings":"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","sources":["components/ChaptersTree/ChapterStatus/index.ts","components/ChaptersTree/ChapterStatus/ChapterStatus.tsx","components/ChaptersTree/ChaptersTree.tsx","components/ChaptersTree/index.ts","components/ChapterEditor/ChapterEditor.tsx","components/ChapterEditor/index.ts","components/GraphTree/GraphTree.tsx","components/GraphTree/index.ts","components/ModalEditMetadata/ModalEditMetadata.tsx","components/ModalEditMetadata/index.ts","components/TopMenu/TopMenu.tsx","components/TopMenu/index.ts","pages/EditorPage/EditorPage.tsx","redux/reduxHooks.ts"],"sourcesContent":["import { ChapterStatus } from './ChapterStatus';\nexport default ChapterStatus;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSkullCrossbones,\n    faTrophy,\n    faPlay,\n    faCircleCheck,\n    faCircleXmark,\n    faCircleStop,\n    faThumbTack,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Status } from 'configuration/interfaces';\n\nexport const ChapterStatus = ({ dead, end, fixed, ready, start, win }: Status) => {\n    return (\n        <>\n            {start && (\n                <FontAwesomeIcon\n                    icon={faPlay}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {fixed && (\n                <FontAwesomeIcon\n                    icon={faThumbTack}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {dead && (\n                <FontAwesomeIcon\n                    icon={faSkullCrossbones}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {end && (\n                <FontAwesomeIcon\n                    icon={faCircleStop}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {win && (\n                <FontAwesomeIcon\n                    icon={faTrophy}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='gold'\n                />\n            )}\n            {ready ? (\n                <FontAwesomeIcon\n                    icon={faCircleCheck}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='green'\n                />\n            ) : (\n                <FontAwesomeIcon\n                    icon={faCircleXmark}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='red'\n                />\n            )}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n    Button,\n    Checkbox,\n    Col,\n    Form,\n    Input,\n    Modal,\n    Row,\n    Space,\n    Typography,\n} from 'antd';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { setSelectedChapterId } from 'redux/gameBookSlice';\nimport ChapterStatus from './ChapterStatus';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSkullCrossbones,\n    faTrophy,\n    faPlay,\n    faCircleCheck,\n    faCircleXmark,\n    faCircleStop,\n    faThumbTack,\n    faPlusCircle,\n    faFloppyDisk,\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface IChaptersTreeProps {}\nconst { Text } = Typography;\n\nconst ChaptersTreeStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    padding: 10px;\n\n    .tree-list {\n        overflow-y: auto;\n        height: calc(100% - 100px);\n        border: 1px solid #444;\n        margin: 10px 0;\n        list-style-type: none;\n        padding-left: 15px;\n        li {\n            width: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            font-size: 1.2rem;\n            color: #bbb;\n            margin: 10px 0px;\n            padding: 5px 0;\n            &:hover {\n                background-color: #222;\n                cursor: pointer;\n            }\n        }\n        &_selected {\n            background-color: #333;\n        }\n    }\n`;\n\nexport const ChaptersTree: React.FC<IChaptersTreeProps> = () => {\n    const { chapters, selectedId } = useAppSelector(state => state.gamebook);\n    const dispach = useAppDispatch();\n    const [selectedIdState, setSelectedIdState] = React.useState(selectedId);\n    const [searched, setSearched] = React.useState('');\n    const [form] = Form.useForm();\n\n    const handleClick = (id: string) => {\n        setSelectedIdState(id);\n        dispach(setSelectedChapterId(id));\n    };\n\n    const handleInputChange = (e: React.ChangeEvent<{ value: string }>) => {\n        setSearched(e.target.value);\n    };\n\n    // redraw list if selected\n    React.useEffect(() => {\n        console.log(selectedIdState);\n        return () => {};\n    }, [selectedIdState]);\n\n    const onFinish = (values: any) => {\n        console.log(values);\n    };\n\n    return (\n        <>\n            <ChaptersTreeStyled>\n                <Input\n                    placeholder='Filter paragraphs by title or number'\n                    size='large'\n                    allowClear\n                    value={searched}\n                    onChange={handleInputChange}\n                />\n                <ul className='tree-list'>\n                    {chapters\n                        .filter(chapter => {\n                            return searched\n                                .split(' ')\n                                .some(\n                                    a =>\n                                        chapter.title\n                                            .toLowerCase()\n                                            .trim()\n                                            .includes(a.toLowerCase().trim()) ||\n                                        parseInt(a.trim()) ===\n                                            chapter.chapterNumber\n                                );\n                        })\n                        .map(chapter => {\n                            return (\n                                <li\n                                    key={chapter.id}\n                                    className={`tree-list_chapter ${\n                                        chapter.id === selectedId\n                                            ? 'tree-list_selected'\n                                            : ''\n                                    }`}\n                                    onClick={() => handleClick(chapter.id)}\n                                >\n                                    <Text>\n                                        {`${chapter.chapterNumber}) ${\n                                            chapter.title.length > 25\n                                                ? chapter.title.slice(0, 25) +\n                                                  '...'\n                                                : chapter.title\n                                        }`}\n                                    </Text>\n                                    <div>\n                                        {chapter?.status && (\n                                            <ChapterStatus\n                                                {...chapter.status}\n                                            />\n                                        )}\n                                    </div>\n                                </li>\n                            );\n                        })}\n                </ul>\n                <Button block size='large'>\n                    <FontAwesomeIcon className='faIcon' icon={faPlusCircle} />{' '}\n                    New chapter\n                </Button>\n                <Modal\n                    title='Create new Chapter'\n                    visible={false}\n                    onOk={() => {}}\n                    onCancel={() => {}}\n                    footer={null}\n                    width={700}\n                >\n                    <Form\n                        form={form}\n                        autoComplete='off'\n                        layout='vertical'\n                        size='large'\n                        onFinish={onFinish}\n                    >\n                        <Form.Item label='Title'>\n                            <Input />\n                        </Form.Item>\n                        <Row gutter={16} justify='center'>\n                            <Col>\n                                <Form.Item name='win' valuePropName='checked'>\n                                    <Checkbox onChange={() => {}}>\n                                        <FontAwesomeIcon\n                                            className='faIcon'\n                                            icon={faTrophy}\n                                        />{' '}\n                                        Win ending\n                                    </Checkbox>\n                                </Form.Item>\n                            </Col>\n                            <Col>\n                                <Form.Item name='dead' valuePropName='checked'>\n                                    <Checkbox\n                                        onChange={() => {}}\n                                        value='Dead ending'\n                                    >\n                                        <FontAwesomeIcon\n                                            className='faIcon'\n                                            icon={faSkullCrossbones}\n                                        />{' '}\n                                        Dead ending\n                                    </Checkbox>\n                                </Form.Item>\n                            </Col>\n                            <Col>\n                                <Form.Item name='fixed' valuePropName='checked'>\n                                    <Checkbox\n                                        onChange={() => {}}\n                                        value='Fixed chapter'\n                                    >\n                                        <FontAwesomeIcon\n                                            className='faIcon'\n                                            icon={faThumbTack}\n                                        />{' '}\n                                        Fixed chapter\n                                    </Checkbox>\n                                </Form.Item>\n                            </Col>\n                            <Col>\n                                <Form.Item name='ready' valuePropName='checked'>\n                                    <Checkbox\n                                        onChange={() => {}}\n                                        value='Fixed chapter'\n                                    >\n                                        <FontAwesomeIcon\n                                            className='faIcon'\n                                            icon={faCircleCheck}\n                                        />{' '}\n                                        Is ready\n                                    </Checkbox>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Form.Item\n                            style={{\n                                textAlign: 'end',\n                            }}\n                        >\n                            <Button htmlType='submit'>Create</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </ChaptersTreeStyled>\n        </>\n    );\n};\n","import { ChaptersTree } from './ChaptersTree';\nexport default ChaptersTree;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    Switch,\n    Space,\n    Row,\n    Col,\n    Radio,\n} from 'antd';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSkullCrossbones,\n    faTrophy,\n    faPlay,\n    faCircleCheck,\n    faCircleXmark,\n    faCircleStop,\n    faThumbTack,\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface ChapterEditorProps {}\n\nconst ChapterEditorStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    textarea {\n        width: 100%;\n        height: 50vh;\n        padding: 12px 20px;\n        font-size: 1.2rem;\n        resize: none;\n    }\n`;\n\nexport const ChapterEditor: React.FC<ChapterEditorProps> = () => {\n    const { chapters, selectedId } = useAppSelector(state => state.gamebook);\n    const [form] = Form.useForm();\n\n    React.useEffect(() => {\n        let chapter;\n        if (selectedId) {\n            chapter = chapters.find(ch => ch.id === selectedId);\n            form.setFieldsValue({\n                id: chapter?.id,\n                chapterNumber: chapter?.chapterNumber,\n                title: chapter?.title,\n                content: chapter?.content,\n                win: chapter?.status?.win,\n                dead: chapter?.status?.dead,\n                fixed: chapter?.status?.fixed,\n                ready: chapter?.status?.ready,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedId]);\n\n    const onFinish = (values: any) => {\n        console.log(values);\n    };\n\n    return (\n        <ChapterEditorStyled>\n            <Form\n                form={form}\n                autoComplete='off'\n                layout='vertical'\n                size='large'\n                onFinish={onFinish}\n            >\n                <Row>\n                    <Col>\n                        <Form.Item name='chapterNumber' hidden>\n                            <Input/>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item name='id' hidden>\n                            <Input/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Form.Item label='Title' name='title'>\n                    <Input />\n                </Form.Item>\n                <Row gutter={16}>\n                    <Col>\n                        <Form.Item name='win' valuePropName='checked'>\n                            <Checkbox onChange={() => {}}>\n                                <FontAwesomeIcon className='faIcon' icon={faTrophy} /> Win ending\n                            </Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item name='dead' valuePropName='checked'>\n                            <Checkbox onChange={() => {}} value='Dead ending'>\n                                <FontAwesomeIcon className='faIcon' icon={faSkullCrossbones} />{' '}\n                                Dead ending\n                            </Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item name='fixed' valuePropName='checked'>\n                            <Checkbox onChange={() => {}} value='Fixed chapter'>\n                                <FontAwesomeIcon className='faIcon' icon={faThumbTack} /> Fixed\n                                chapter\n                            </Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item name='ready' valuePropName='checked'>\n                            <Checkbox onChange={() => {}} value='Fixed chapter'>\n                                <FontAwesomeIcon className='faIcon' icon={faCircleCheck} /> Is\n                                ready\n                            </Checkbox>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Form.Item\n                    label='Paragraph'\n                    name='content'\n                    className='chapter-editor_textarea'\n                >\n                    <Input.TextArea />\n                </Form.Item>\n                <Form.Item>\n                    <Button htmlType='submit' disabled={!selectedId} block>\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </ChapterEditorStyled>\n    );\n};\n","import { ChapterEditor } from './ChapterEditor';\nexport default ChapterEditor;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Graph from 'react-graph-vis';\nimport { Typography } from 'antd';\n\ninterface GraphTreeProps {\n    data: [];\n}\n\nconst { Title, Text, Paragraph } = Typography;\n\nconst GraphTreeStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    padding: 10px;\n    .graph-container {\n        background-color: #222;\n        height: 50%;\n        border: 1px solid #444;\n    }\n`;\n\nconst graph = {\n    nodes: [\n        {\n            id: 'blebleble',\n            label: 'node 1 tootip text',\n            title: 'node 1 tootip text',\n            color: 'white',\n        },\n        {\n            id: 2,\n            label: 'Node 2 tootip text',\n            title: 'node 2 tootip text',\n        },\n        { id: 3, label: 'Node 3 tootip text', title: 'node 3 tootip text' },\n        { id: 4, label: 'Node 4 tootip text', title: 'node 4 tootip text' },\n        { id: 5, label: 'Node 5 tootip text', title: 'node 5 tootip text' },\n        { id: 6, label: 'Node 6 tootip text', title: 'node 5 tootip text' },\n        { id: 7, label: 'Node 7 tootip text', title: 'node 5 tootip text' },\n        { id: 8, label: 'Node 8 tootip text', title: 'node 5 tootip text' },\n    ],\n    edges: [\n        { from: 'blebleble', to: 2 },\n        { from: 'blebleble', to: 3 },\n        { from: 2, to: 4 },\n        { from: 2, to: 5 },\n        { from: 3, to: 4 },\n        { from: 4, to: 8 },\n        { from: 5, to: 6 },\n        { from: 5, to: 7 },\n    ],\n};\n\nconst options = {\n    layout: {\n        hierarchical: false,\n        randomSeed: 321,\n    },\n    edges: {\n        color: '#FFFFFF',\n        smooth: true,\n    },\n    nodes: {\n        shape: 'box',\n    },\n    height: '100%',\n    width: '100%',\n};\n\nconst events = {\n    select: function (event: any) {\n        var { nodes, edges } = event;\n        // console.log(`nodes id: `, nodes);\n        // console.log('edges', edges);\n    },\n};\n\nexport const GraphTree: React.FC<GraphTreeProps> = ({ data }) => {\n    return (\n        <GraphTreeStyled>\n            <div className='graph-container'>\n                <Graph graph={graph} options={options} events={events} />\n            </div>\n            <div>bleble</div>\n        </GraphTreeStyled>\n    );\n};\n","import { GraphTree } from './GraphTree';\nexport default GraphTree;\n","import { Button, Col, Modal, Row, Typography } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { HighlightOutlined } from '@ant-design/icons';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { setGamebookAuthor, setGamebookTitle } from 'redux/gameBookSlice';\n\ninterface ModalEditMetadataProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\nconst { Paragraph, Title } = Typography;\n\nconst ModalEditMetadataStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalEditMetadata: React.FC<ModalEditMetadataProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n    const { authorName, gamebookTitle } = useAppSelector(\n        state => state.gamebook\n    );\n    const [author, setAuthor] = React.useState(authorName);\n    const [title, setTitle] = React.useState(gamebookTitle);\n\n    const handleMetadataChange = () => {\n        dispatch(setGamebookAuthor(author));\n        dispatch(setGamebookTitle(title));\n    };\n\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalEditMetadataStyled>\n            <Modal\n                title='View / Edit gamebook metadata'\n                visible={isVisible}\n                // onCancel={handleCancel}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Title level={5}>Author</Title>\n                <Paragraph\n                    editable={{\n                        icon: <HighlightOutlined />,\n                        tooltip: 'click to edit text',\n                        onChange: setAuthor,\n                    }}\n                >\n                    {author}\n                </Paragraph>\n                <Title level={5}>Title</Title>\n                <Paragraph\n                    editable={{\n                        icon: <HighlightOutlined />,\n                        tooltip: 'click to edit text',\n                        onChange: setTitle,\n                    }}\n                >\n                    {title}\n                </Paragraph>\n                <Row>\n                    <Col\n                        span={24}\n                        style={{ display: 'flex', justifyContent: 'end' }}\n                    >\n                        <Button onClick={handleMetadataChange}>Save</Button>\n                    </Col>\n                </Row>\n            </Modal>\n        </ModalEditMetadataStyled>\n    );\n};\n","import { ModalEditMetadata } from './ModalEditMetadata';\nexport default ModalEditMetadata","import { Menu, MenuProps } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faBook,\n    faFileLines,\n    faFilePdf,\n    faFileCode,\n    faChartPie,\n    faBookOpen,\n} from '@fortawesome/free-solid-svg-icons';\nimport ModalEditMetadata from 'components/ModalEditMetadata';\ninterface TopMenuProps {}\n\nconst TopMenuStyled = styled.div`\n    // put some styles here\n`;\n\nconst items: MenuProps['items'] = [\n    {\n        label: 'File',\n        key: 'File',\n        children: [\n            {\n                label: 'New book',\n                key: 'newBook',\n                icon: <FontAwesomeIcon icon={faBook} />,\n                disabled: true,\n            },\n            {\n                label: 'Oper existing',\n                key: 'openExisting',\n                icon: <FontAwesomeIcon icon={faFolderOpen} />,\n                disabled: true,\n            },\n        ],\n    },\n    {\n        label: 'Book',\n        key: 'bookOptions',\n        children: [\n            {\n                label: 'Add new chapter',\n                key: 'addNewChapter',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCirclePlus} />,\n            },\n            {\n                label: 'Schuffle chapters',\n                key: 'schuffleChapters',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faDice} />,\n            },\n            {\n                label: 'Statistics',\n                key: 'bookStatistics',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faChartPie} />,\n            },\n            {\n                label: 'Metadata',\n                key: 'metadata',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faBookOpen} />,\n            },\n        ],\n    },\n    {\n        label: 'Export',\n        key: 'exportBook',\n        // disabled: true,\n        children: [\n            {\n                label: 'Export to HTML',\n                key: 'exportHtml',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCode} />,\n            },\n            {\n                label: 'Export to PDF',\n                key: 'exportPdf',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFilePdf} />,\n            },\n            {\n                label: 'Export to TXT',\n                key: 'exportTxt',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileLines} />,\n            },\n        ],\n    },\n    {\n        label: 'Html Preview',\n        key: 'previewBook',\n        disabled: true,\n    },\n    {\n        label: 'New Chapter',\n        key: 'newChapter',\n    },\n];\n\nexport const TopMenu: React.FC<TopMenuProps> = () => {\n    const [current, setCurrent] = React.useState('mail');\n    const [isModalEditMetadataVisible, setIsModalEditMetadataVisible] =\n        React.useState(false);\n\n    const onClick: MenuProps['onClick'] = e => {\n        console.log('click ', e);\n        setCurrent(e.key);\n    };\n    return (\n        <>\n            <TopMenuStyled>\n                <Menu\n                    onClick={onClick}\n                    selectedKeys={[current]}\n                    mode='horizontal'\n                    items={items}\n                />\n            </TopMenuStyled>\n            <ModalEditMetadata\n                isVisible={isModalEditMetadataVisible}\n                setIsVisible={setIsModalEditMetadataVisible}\n            />\n        </>\n    );\n};\n","import { TopMenu } from './TopMenu';\nexport default TopMenu;\n","import { Col, Menu, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faFileWord,\n} from '@fortawesome/free-solid-svg-icons';\nimport MainMenu from 'components/MainMenu';\nimport ChaptersTree from 'components/ChaptersTree';\nimport ChapterEditor from 'components/ChapterEditor';\nimport GraphTree from 'components/GraphTree';\nimport TopMenu from 'components/TopMenu';\n\ninterface IEditorPageProps {}\n\nconst EditorPageStyled = styled.div`\n    height: 100vh;\n    .editor-page_container {\n        height: calc(100% - 46px);\n    }\n    .sidebar__tree-container {\n        width: 25%;\n        height: 100%;\n        overflow-y: hidden;\n    }\n    .editor-container {\n        padding: 10px;\n        width: 50%;\n        height: 100%;\n    }\n    .graph__tree-container {\n        width: 25%;\n        height: 100%;\n    }\n`;\n\nconst EditorPage: React.FC<IEditorPageProps> = ({ ...restProps }) => {\n    return (\n        <EditorPageStyled>\n            <TopMenu />\n            <Row className='editor-page_container'>\n                <Col\n                    className='sidebar__tree-container'\n                    xs={{ span: 24, order: 2 }}\n                    md={{ span: 12, order: 2 }}\n                    lg={{ span: 10, order: 1 }}\n                    xl={{ span: 6, order: 1 }}\n                >\n                    <ChaptersTree />\n                </Col>\n                <Col\n                    className='editor-container'\n                    xs={{ span: 24, order: 1 }}\n                    md={{ span: 24, order: 1 }}\n                    lg={{ span: 14, order: 2 }}\n                    xl={{ span: 12, order: 2 }}\n                >\n                    <ChapterEditor />\n                </Col>\n                <Col\n                    className='graph__tree-container'\n                    xs={{ span: 24, order: 3 }}\n                    md={{ span: 12, order: 3 }}\n                    lg={{ span: 24, order: 3 }}\n                    xl={{ span: 6, order: 3 }}\n                >\n                    <GraphTree data={[]} />\n                </Col>\n            </Row>\n        </EditorPageStyled>\n    );\n};\n\nexport default EditorPage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["dead","end","fixed","ready","start","win","icon","faPlay","size","style","marginRight","faThumbTack","faSkullCrossbones","faCircleStop","faTrophy","color","faCircleCheck","faCircleXmark","Text","Typography","ChaptersTreeStyled","styled","useAppSelector","state","gamebook","chapters","selectedId","dispach","useAppDispatch","React","selectedIdState","setSelectedIdState","searched","setSearched","Form","form","console","log","placeholder","allowClear","value","onChange","e","target","className","filter","chapter","split","some","a","title","toLowerCase","trim","includes","parseInt","chapterNumber","map","id","onClick","setSelectedChapterId","length","slice","status","block","faPlusCircle","visible","onOk","onCancel","footer","width","autoComplete","layout","onFinish","values","label","gutter","justify","name","valuePropName","textAlign","htmlType","ChapterEditorStyled","find","ch","setFieldsValue","content","hidden","disabled","GraphTreeStyled","graph","nodes","edges","from","to","options","hierarchical","randomSeed","smooth","shape","height","events","select","event","data","Paragraph","Title","ModalEditMetadataStyled","isVisible","setIsVisible","dispatch","authorName","gamebookTitle","author","setAuthor","setTitle","level","editable","HighlightOutlined","tooltip","span","display","justifyContent","setGamebookAuthor","setGamebookTitle","TopMenuStyled","items","key","children","faBook","faFolderOpen","faFileCirclePlus","faDice","faChartPie","faBookOpen","faFileCode","faFilePdf","faFileLines","current","setCurrent","isModalEditMetadataVisible","setIsModalEditMetadataVisible","selectedKeys","mode","EditorPageStyled","xs","order","md","lg","xl","useDispatch","useSelector"],"sourceRoot":""}
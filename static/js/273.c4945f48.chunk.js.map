{"version":3,"file":"static/js/273.c4945f48.chunk.js","mappings":"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","sources":["components/ModalEditMetadata/ModalEditMetadata.tsx","components/ModalEditMetadata/index.ts","utils/plainTextFormatter.js","components/ModalExportToFile/ModalExportToFile.tsx","components/ModalExportToFile/index.ts","components/ModalIntroduction/ModalIntroduction.tsx","components/ModalIntroduction/index.ts","components/MenuTop/MenuTop.tsx","components/MenuTop/index.ts","components/ModalNewChapter/ModalNewChapter.tsx","components/ModalNewChapter/index.ts","components/ModalShuffleChapter/ModalShuffleChapter.tsx","components/ModalShuffleChapter/index.ts"],"sourcesContent":["import { Button, Modal, Space, notification, Form, Input } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { CONFIG } from 'configuration';\nimport { updateMetadataDB } from 'redux/gameBookSlice';\nimport { ModalProps } from 'configuration/interfaces';\n\ninterface ModalEditMetadataProps extends ModalProps {}\n\nconst ModalEditMetadataStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalEditMetadata: React.FC<ModalEditMetadataProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n    const { authorName, gamebookTitle } = useAppSelector(\n        state => state.gamebook\n    );\n    const [form] = Form.useForm();\n\n    const onFinish = async (values: any) => {\n        const { authorName, gamebookTitle } = values;\n        authorName.trim();\n        gamebookTitle.trim();\n        dispatch(updateMetadataDB({ authorName, gamebookTitle }));\n        notification['success']({\n            message: 'Metadata changed',\n            description: `${authorName}, creator of \"${gamebookTitle}\" saved.`,\n            placement: 'bottomRight',\n        });\n        setIsVisible(false);\n        form.resetFields();\n    };\n    const handleCancel = () => {\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalEditMetadataStyled>\n            <Modal\n                title='View / Edit gamebook metadata'\n                visible={isVisible}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Form\n                    form={form}\n                    layout='vertical'\n                    autoComplete='off'\n                    requiredMark='optional'\n                    onFinish={onFinish}\n                    initialValues={{\n                        authorName,\n                        gamebookTitle,\n                    }}\n                >\n                    <Form.Item\n                        label={`Author's name`}\n                        name='authorName'\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input author's name!\",\n                            },\n                            {\n                                min: CONFIG.AUHOR_NAME_LENGTH_MIN,\n                                message: `Name min ${CONFIG.AUHOR_NAME_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.AUHOR_NAME_LENGTH_MAX,\n                                message: `Name max ${CONFIG.AUHOR_NAME_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. John Doe' />\n                    </Form.Item>\n                    <Form.Item\n                        label='Title'\n                        name='gamebookTitle'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input gamebook main title!',\n                            },\n                            {\n                                min: CONFIG.CHAPTER_TITLE_LENGTH_MIN,\n                                message: `Name min ${CONFIG.CHAPTER_TITLE_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.CHAPTER_TITLE_LENGTH_MAX,\n                                message: `Name max ${CONFIG.CHAPTER_TITLE_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. New Journey of Halflings' />\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Space size='middle'>\n                            <Button onClick={handleCancel}>Cancel</Button>\n                            <Button type='primary' htmlType='submit'>\n                                Submit\n                            </Button>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalEditMetadataStyled>\n    );\n};\n","import { ModalEditMetadata } from './ModalEditMetadata';\nexport default ModalEditMetadata","export const plainTextFormatter = ({\n    gamebookTitle,\n    authorName,\n    introduction,\n    chapters,\n}) => {\n    let text = `${gamebookTitle}\\n\\n`\n    text += `by ${authorName}\\n\\n`\n    text += `=========================\\n\\n\\n`\n    text += 'Introduciton\\n\\n' + introduction + '\\n\\n'\n    chapters.forEach(chapter => {\n        text += `${chapter.chapterNumber}\\n\\n`\n        text += `${chapter.content}\\n\\n\\n\\n`\n    })\n    text += 'END'\n    return text\n};\n","//https://web.dev/file-system-access/\nimport {\n    Button,\n    Form,\n    Input,\n    Modal,\n    notification,\n    Radio,\n    Space,\n} from 'antd';\nimport { CONFIG } from 'configuration';\nimport { ModalProps } from 'configuration/interfaces';\nimport React from 'react';\nimport { useAppSelector } from 'redux/reduxHooks';\nimport styled from 'styled-components';\nimport { plainTextFormatter } from 'utils/plainTextFormatter';\n\ninterface ModalExportToFileProps extends ModalProps {}\n\nconst ModalExportToFileStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalExportToFile: React.FC<ModalExportToFileProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const { gamebookTitle, authorName, chapters, introduction } = useAppSelector(\n        state => state.gamebook\n    );\n    const [form] = Form.useForm();\n    const [radioValue, setRadioValue] = React.useState(`text/plain`);\n    const onFinish = async (values: any) => {\n        let textToSaveAsBlob;\n        if (values.filetype === 'text/plain') {\n            textToSaveAsBlob = new Blob(\n                [\n                    plainTextFormatter({\n                        gamebookTitle,\n                        authorName,\n                        introduction,\n                        chapters,\n                    }),\n                ],\n                { type: 'text/plain' }\n            );\n        } else {\n            textToSaveAsBlob = new Blob(\n                [\n                    JSON.stringify({\n                        gamebookTitle,\n                        authorName,\n                        introduction,\n                        chapters,\n                    }),\n                ],\n                {\n                    type: 'application/json',\n                }\n            );\n        }\n        const textToSaveAsURL = window.URL.createObjectURL(textToSaveAsBlob);\n        const fileNameToSaveAs = gamebookTitle || `gamebook_file`;\n\n        const downloadLink = document.createElement('a');\n        downloadLink.download = fileNameToSaveAs;\n        downloadLink.innerHTML = 'Download File';\n        downloadLink.href = textToSaveAsURL;\n        downloadLink.onclick = (event: any) => {\n            document.body.removeChild(event.target);\n        };\n        downloadLink.style.display = 'none';\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        notification['success']({\n            message: `Saving...`,\n            description: `File ${fileNameToSaveAs} by ${authorName} saved.`,\n            placement: 'bottomRight',\n        });\n        setIsVisible(false);\n    };\n    const handleCancel = () => {\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalExportToFileStyled>\n            <Modal\n                title='Export to file'\n                visible={isVisible}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Form\n                    form={form}\n                    layout='vertical'\n                    autoComplete='off'\n                    requiredMark={false}\n                    onFinish={onFinish}\n                    initialValues={{ gamebookTitle, filetype: radioValue }}\n                >\n                    <Form.Item\n                        label={`Filename`}\n                        name='gamebookTitle'\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input file's name!\",\n                            },\n                            {\n                                min: CONFIG.FILE_NAME_LENGTH_MIN,\n                                message: `Filename min ${CONFIG.FILE_NAME_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.FILE_NAME_LENGTH_MAX,\n                                message: `Filename max ${CONFIG.FILE_NAME_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder={`ex. ${gamebookTitle}`} />\n                    </Form.Item>\n                    <Form.Item label='Filetype' name='filetype'>\n                        <Radio.Group>\n                            <Radio value={`text/plain`}>txt</Radio>\n                            <Radio value={`application/json`}>json</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Space size='middle'>\n                            <Button onClick={handleCancel}>Cancel</Button>\n                            <Button type='primary' htmlType='submit'>\n                                Submit\n                            </Button>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalExportToFileStyled>\n    );\n};\n","import { ModalExportToFile } from './ModalExportToFile';\nexport default ModalExportToFile;\n","import { Form, Modal, Input, Space, Button } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ModalProps } from 'configuration/interfaces';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { updateMetadataDB } from 'redux/gameBookSlice';\n\ninterface ModalIntroductionProps extends ModalProps {}\n\nconst ModalIntroductionStyled = styled.div`\n    // put some styles here\n    .modal-introduction {\n        &__input {\n            &-textarea {\n                resize: 'none';\n                height: '50vh';\n                font-size: '1.2rem';\n            }\n        }\n    }\n`;\n\nexport const ModalIntroduction: React.FC<ModalIntroductionProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispach = useAppDispatch();\n    const { authorName, gamebookTitle, introduction } = useAppSelector(\n        state => state.gamebook\n    );\n    const [form] = Form.useForm();\n    const onFinish = async (values: any) => {\n        const { introduction } = values;\n        dispach(updateMetadataDB({ introduction }));\n        form.resetFields();\n        setIsVisible(false);\n    };\n    const handleCancel = () => {\n        form.resetFields();\n        setIsVisible(false);\n    };\n    return (\n        <ModalIntroductionStyled>\n            <Modal\n                title='Introduction'\n                visible={isVisible}\n                footer={null}\n                onCancel={handleCancel}\n                width={`50%`}\n            >\n                <Form\n                    form={form}\n                    layout='vertical'\n                    autoComplete='off'\n                    requiredMark={false}\n                    onFinish={onFinish}\n                    initialValues={{ introduction }}\n                >\n                    <Form.Item name='introduction'>\n                        <Input.TextArea\n                            style={{\n                                resize: 'none',\n                                height: '50vh',\n                                fontSize: '1.2rem',\n                            }}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Space size='middle'>\n                            <Button onClick={handleCancel}>Cancel</Button>\n                            <Button type='primary' htmlType='submit'>\n                                Submit\n                            </Button>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalIntroductionStyled>\n    );\n};\n","import {ModalIntroduction} from './ModalIntroduction'\nexport default ModalIntroduction","import React from 'react';\nimport { Menu, MenuProps } from 'antd';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faBook,\n    faFileCode,\n    faChartPie,\n    faBookBookmark,\n    faFileSignature,\n    faFloppyDisk,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useAppDispatch } from 'redux/reduxHooks';\nimport { dropDB } from 'redux/gameBookSlice';\nimport ModalEditMetadata from 'components/ModalEditMetadata';\nimport ModalShuffleChapter from 'components/ModalShuffleChapter';\nimport ModalNewChapter from 'components/ModalNewChapter';\nimport ModalExportToFile from 'components/ModalExportToFile';\nimport ModalIntroduction from 'components/ModalIntroduction';\n\ninterface MenuTopProps {}\n\nconst MenuTopStyled = styled.div`\n    // put some styles here\n`;\n\nconst items: MenuProps['items'] = [\n    {\n        label: 'File',\n        key: 'File',\n        disabled: false,\n        children: [\n            {\n                label: 'New book',\n                key: 'newBook',\n                icon: <FontAwesomeIcon icon={faBook} />,\n                disabled: true,\n            },\n            {\n                label: 'Oper existing',\n                key: 'openExisting',\n                icon: <FontAwesomeIcon icon={faFolderOpen} />,\n                disabled: true,\n            },\n            {\n                label: 'Export',\n                key: 'exportBook',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faFloppyDisk} />,\n            },\n        ],\n    },\n    {\n        label: 'Book',\n        key: 'bookOptions',\n        children: [\n            {\n                label: 'Add new chapter',\n                key: 'addNewChapter',\n                icon: <FontAwesomeIcon icon={faFileCirclePlus} />,\n            },\n            {\n                label: 'Schuffle chapters',\n                key: 'schuffleChapters',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faDice} />,\n            },\n            {\n                label: 'Introduction',\n                key: 'introduction',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faFileSignature} />,\n            },\n            {\n                label: 'Metadata',\n                key: 'metadata',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faBookBookmark} />,\n            },\n            {\n                label: 'Statistics',\n                key: 'bookStatistics',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faChartPie} />,\n            },\n        ],\n    },\n    {\n        label: 'Html Preview',\n        key: 'previewBook',\n        disabled: false,\n    },\n    {\n        label: 'Play',\n        key: 'playBook',\n        disabled: false,\n    },\n    {\n        label: 'Graph',\n        key: 'graphBook',\n        disabled: true,\n    },\n    {\n        label: 'About',\n        key: 'aboutApp',\n        disabled: true,\n        children: [\n            {\n                label: 'Help',\n                key: 'appHelp',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCode} />,\n            },\n        ],\n    },\n    {\n        label: 'DropDB',\n        key: 'dropDB',\n        disabled: true,\n        danger: true,\n    },\n];\n\nexport const MenuTop: React.FC<MenuTopProps> = () => {\n    let navigate = useNavigate();\n    const dispatch = useAppDispatch();\n    const [current, setCurrent] = React.useState('');\n    const [isModalEditMetadataVisible, setIsModalEditMetadataVisible] =\n        React.useState(false);\n    const [isModalNewChapterVisible, setIsModalNewChapterVisible] =\n        React.useState(false);\n    const [isVisibleModalShuffleChapter, setIsVisibleModalShuffleChapter] =\n        React.useState(false);\n    const [isVisibleModalIntroduction, setIsVisibleModalIntroduction] =\n        React.useState(false);\n    const [isVisibleModalExportToFile, setIsVisibleModalExportToFile] =\n        React.useState(false);\n\n    const onClick: MenuProps['onClick'] = e => {\n        setCurrent(e.key);\n        switch (e.key) {\n            case 'addNewChapter':\n                setIsModalNewChapterVisible(true);\n                break;\n            case 'metadata':\n                setIsModalEditMetadataVisible(true);\n                break;\n            case 'schuffleChapters':\n                setIsVisibleModalShuffleChapter(true);\n                break;\n            case 'introduction':\n                setIsVisibleModalIntroduction(true);\n                break;\n            case 'exportBook':\n                setIsVisibleModalExportToFile(true);\n                break;\n            case 'previewBook':\n                navigate(`/preview`);\n                break;\n            case 'playBook':\n                navigate(`/play`);\n                break;\n            case 'dropDB':\n                dispatch(dropDB());\n                navigate(`/`);\n                break;\n            default:\n                break;\n        }\n    };\n    return (\n        <>\n            <MenuTopStyled>\n                <Menu\n                    onClick={onClick}\n                    selectedKeys={[current]}\n                    mode='horizontal'\n                    items={items}\n                />\n            </MenuTopStyled>\n            <ModalEditMetadata\n                isVisible={isModalEditMetadataVisible}\n                setIsVisible={setIsModalEditMetadataVisible}\n            />\n            <ModalNewChapter\n                isVisible={isModalNewChapterVisible}\n                setIsVisible={setIsModalNewChapterVisible}\n            />\n            <ModalShuffleChapter\n                isVisible={isVisibleModalShuffleChapter}\n                setIsVisible={setIsVisibleModalShuffleChapter}\n            />\n            <ModalExportToFile\n                isVisible={isVisibleModalExportToFile}\n                setIsVisible={setIsVisibleModalExportToFile}\n            />\n            <ModalIntroduction\n                isVisible={isVisibleModalIntroduction}\n                setIsVisible={setIsVisibleModalIntroduction}\n            />\n        </>\n    );\n};\n","import { MenuTop } from './MenuTop';\nexport default MenuTop;\n","import { Button, Form, Input, Modal, notification } from 'antd';\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch } from 'redux/reduxHooks';\nimport { addNewChapterDB } from 'redux/gameBookSlice';\nimport { CONFIG } from 'configuration';\nimport { ModalProps } from 'configuration/interfaces';\n\ninterface ModalNewChapterProps extends ModalProps {}\n\nconst ModalNewChapterStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalNewChapter: React.FC<ModalNewChapterProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const [form] = Form.useForm();\n    const dispach = useAppDispatch();\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n    const onFinish = (variables: any) => {\n        // TODO: ogarnąć doubleclick na formie...\n        dispach(addNewChapterDB(variables.title));\n        notification['success']({\n            message: 'Chapter created',\n            description: `Chapter \"${variables.title}\" created. You can select it in chapter's tree on the left to edit it's content.`,\n            placement: 'bottomRight',\n            duration: 3,\n        });\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalNewChapterStyled>\n            <Modal\n                title='Create new Chapter'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n                width={700}\n            >\n                <Form\n                    form={form}\n                    autoComplete='off'\n                    layout='vertical'\n                    requiredMark='optional'\n                    size='large'\n                    onFinish={onFinish}\n                    initialValues={{\n                        title: 'New chapter very new title',\n                    }}\n                >\n                    <Form.Item\n                        name='title'\n                        rules={[\n                            { required: true, message: 'Enter the title!' },\n                            {\n                                min: CONFIG.CHAPTER_TITLE_LENGTH_MIN,\n                                message: `Min length ${CONFIG.CHAPTER_TITLE_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.CHAPTER_TITLE_LENGTH_MAX,\n                                message: `Max length ${CONFIG.CHAPTER_TITLE_LENGTH_MAX} chars!`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"ex. Entering dungeon's kitchen\" />\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Button htmlType='submit'>Create chapter</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalNewChapterStyled>\n    );\n};\n","import { ModalNewChapter } from './ModalNewChapter';\nexport default ModalNewChapter","import { Button, Modal, Space, notification, Typography } from 'antd';\nimport { ModalProps } from 'configuration/interfaces';\nimport React from 'react';\nimport { shuffleChapters } from 'redux/gameBookSlice';\nimport { useAppDispatch } from 'redux/reduxHooks';\nimport styled from 'styled-components';\n\ninterface ModalShuffleChapterProps extends ModalProps {}\n\nconst ModalShuffleChapterStyled = styled.div`\n    // put some styles here\n`;\n\nconst { Text } = Typography;\n\nexport const ModalShuffleChapter: React.FC<ModalShuffleChapterProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n    const handleDeleteChapter = () => {\n        dispatch(shuffleChapters());\n        notification['success']({\n            message: 'Shuffled chapters',\n            description: `Chapters shuffled.`,\n            placement: 'bottomRight',\n        });\n        setIsVisible(false);\n    };\n    return (\n        <ModalShuffleChapterStyled>\n            <Modal\n                title='Schuffle chapters'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n            >\n                <Text>Do you really want to shuffle chapters?</Text>\n                <div\n                    style={{\n                        textAlign: 'end',\n                    }}\n                >\n                    <Space size='middle'>\n                        <Button onClick={handleCancel}>Cancel</Button>\n                        <Button\n                            onClick={handleDeleteChapter}\n                            style={{\n                                color: '#fa8c16',\n                                borderColor: '#fa8c16',\n                            }}\n                        >\n                            Shuffle\n                        </Button>\n                    </Space>\n                </div>\n            </Modal>\n        </ModalShuffleChapterStyled>\n    );\n};\n","import { ModalShuffleChapter } from './ModalShuffleChapter';\nexport default ModalShuffleChapter;\n"],"names":["ModalEditMetadataStyled","styled","isVisible","setIsVisible","dispatch","useAppDispatch","useAppSelector","state","gamebook","authorName","gamebookTitle","Form","form","onFinish","values","trim","updateMetadataDB","notification","message","description","placement","resetFields","handleCancel","title","visible","footer","onCancel","layout","autoComplete","requiredMark","initialValues","label","name","rules","required","min","CONFIG","max","placeholder","style","textAlign","size","onClick","type","htmlType","plainTextFormatter","introduction","chapters","text","forEach","chapter","chapterNumber","content","ModalExportToFileStyled","React","radioValue","textToSaveAsBlob","filetype","Blob","JSON","stringify","textToSaveAsURL","window","URL","createObjectURL","fileNameToSaveAs","downloadLink","document","createElement","download","innerHTML","href","onclick","event","body","removeChild","target","display","appendChild","click","value","ModalIntroductionStyled","dispach","width","resize","height","fontSize","MenuTopStyled","items","key","disabled","children","icon","faBook","faFolderOpen","faFloppyDisk","faFileCirclePlus","faDice","faFileSignature","faBookBookmark","faChartPie","faFileCode","danger","navigate","useNavigate","current","setCurrent","isModalEditMetadataVisible","setIsModalEditMetadataVisible","isModalNewChapterVisible","setIsModalNewChapterVisible","isVisibleModalShuffleChapter","setIsVisibleModalShuffleChapter","isVisibleModalIntroduction","setIsVisibleModalIntroduction","isVisibleModalExportToFile","setIsVisibleModalExportToFile","e","dropDB","selectedKeys","mode","ModalNewChapter","ModalShuffleChapter","ModalNewChapterStyled","variables","addNewChapterDB","duration","ModalShuffleChapterStyled","Text","Typography","shuffleChapters","color","borderColor"],"sourceRoot":""}
{"version":3,"file":"static/js/211.674aa4c5.chunk.js","mappings":"iSAYMA,EAAqBC,EAAAA,GAAAA,IAAH,oNAWlBC,EAAe,CACjBC,MAAO,GACPC,MAAO,IAGLC,EAAU,CACZC,OAAQ,CACJC,cAAc,EACdC,WAAY,KAEhBJ,MAAO,CACHK,MAAO,UACPC,QAAQ,GAEZP,MAAO,CACHQ,MAAO,OAEXC,OAAQ,OACRC,MAAO,QAGLC,EAAS,CACXC,OAAQ,SAAUC,GACSA,EAAjBb,MAAiBa,EAAVZ,QAoErB,SAASa,EAAgBC,GACrB,OAAIA,EAAQC,KAAOC,EAAAA,EAAAA,iBAAgC,OAC5C,QCnHX,I,EAAA,EDiDyD,WACrD,OAAiCC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,YAAvDC,EAAR,EAAQA,SACR,GADA,EAAkBC,WACQC,EAAAA,SAAuBxB,IAAjD,eAAOyB,EAAP,KAAcC,EAAd,KAgDA,OA/CAF,EAAAA,WAAgB,WACZ,IAAMG,EAAcL,EAASM,KAAI,SAAAZ,GAAO,OAAIA,EAAQC,MAC9Cf,EAAQoB,EACTM,KAAI,SAAAZ,GAAY,IAAD,IACNa,EAAM,UAAGb,EAAQc,eAAX,iBAAG,EACTC,MAAM,iBADA,aAAG,EAETH,KAAI,SAAAI,GAAE,OAAIC,SAASD,MAUzB,OATc,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAQD,KAAI,SAAAM,GACzB,OAAIA,EAAU,GAAKA,EAAUZ,EAASa,OAC3B,CACHC,KAAMpB,EAAQC,GACdoB,GAAIV,EAAYO,EAAU,IAG3B,CAAEE,KAAMpB,EAAQC,GAAIoB,GAAI,oBAItCC,OAELZ,EAAS,CACLzB,MAAM,GAAD,eACEqB,EAASM,KAAI,SAAAZ,GACZ,MAAO,CACHC,GAAID,EAAQC,GACZsB,MAAM,GAAD,OAAKvB,EAAQwB,cAAb,YAA8BxB,EAAQyB,MAAMC,MAC7C,EACA,KAEJD,MAAM,GAAD,OAAKzB,EAAQwB,cAAb,YAA8BxB,EAAQyB,MAAMC,MAC7C,EACA,KAEJnC,MAAOQ,EAAgBC,QAZ9B,CAeD,CACIC,GAAI,aACJsB,MAAO,aACPE,MAAO,aACPlC,MAAO,SAGfL,OAAM,OAAKA,OAEhB,CAACoB,KAGA,SAACxB,EAAD,WACI,gBAAK6C,UAAU,kBAAf,UACI,SAAC,IAAD,CAEIlB,MAAOA,EACPtB,QAASA,EACTS,OAAQA,IAHHgC,EAAAA,EAAAA,W,UEhGnBC,EAAyB9C,EAAAA,GAAAA,IAAH,yOCP5B,EDmBiE,WAC7D,OACI,UAAC8C,EAAD,YACI,SAACC,EAAA,EAAD,KACA,SAAC,IAAD,CAAKH,UAAU,2BAAf,UACI,SAAC,IAAD,CAAKA,UAAU,2BAAf,UACI,SAAC,EAAD","sources":["components/GraphTreeBig/GraphTreeBig.tsx","components/GraphTreeBig/index.ts","pages/GraphTreeBigPage/GraphTreeBigPage.tsx","pages/GraphTreeBigPage/index.ts"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Typography } from 'antd';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { IChapter, IGraph, IGraphEdge } from 'configuration/interfaces';\nimport { v4 as uuidv4 } from 'uuid';\n// import Graph from 'react-graph-vis';\nimport Graph from 'react-graph-vis';\nimport { CONFIG } from 'configuration';\n\ninterface GraphTreeBigProps {}\n\nconst GraphTreeBigStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    padding: 10px;\n    .graph-container {\n        background-color: #222;\n        height: 100%;\n        border: 1px solid #444;\n    }\n`;\n\nconst initialGraph = {\n    nodes: [],\n    edges: [],\n};\n\nconst options = {\n    layout: {\n        hierarchical: false,\n        randomSeed: 321,\n    },\n    edges: {\n        color: '#FFFFFF',\n        smooth: true,\n    },\n    nodes: {\n        shape: 'box',\n    },\n    height: '100%',\n    width: '100%',\n};\n\nconst events = {\n    select: function (event: any) {\n        var { nodes, edges } = event;\n    },\n};\n\nexport const GraphTreeBig: React.FC<GraphTreeBigProps> = () => {\n    const { chapters, selectedId } = useAppSelector(state => state.gamebook);\n    const [graph, setGraph] = React.useState<IGraph>(initialGraph);\n    React.useEffect(() => {\n        const chaptersIds = chapters.map(chapter => chapter.id);\n        const edges = chapters\n            .map(chapter => {\n                const newArr = chapter.content\n                    ?.match(/(\\d+)/g)\n                    ?.map(el => parseInt(el));\n                const newEdges = newArr?.map(element => {\n                    if (element > 0 && element < chapters.length) {\n                        return {\n                            from: chapter.id,\n                            to: chaptersIds[element - 1],\n                        };\n                    }\n                    return { from: chapter.id, to: 'NO_CHAPTER' };\n                });\n                return newEdges;\n            })\n            .flat() as IGraphEdge[];\n\n        setGraph({\n            nodes: [\n                ...chapters.map(chapter => {\n                    return {\n                        id: chapter.id,\n                        label: `${chapter.chapterNumber} ${chapter.title.slice(\n                            0,\n                            10\n                        )}`,\n                        title: `${chapter.chapterNumber} ${chapter.title.slice(\n                            0,\n                            10\n                        )}`,\n                        color: getChapterColor(chapter),\n                    };\n                }),\n                {\n                    id: 'NO_CHAPTER',\n                    label: 'NO CHAPTER',\n                    title: 'NO CHAPTER',\n                    color: 'red',\n                },\n            ],\n            edges: [...edges],\n        });\n    }, [chapters]);\n\n    return (\n        <GraphTreeBigStyled>\n            <div className='graph-container'>\n                <Graph\n                    key={uuidv4()}\n                    graph={graph}\n                    options={options}\n                    events={events}\n                />\n            </div>\n        </GraphTreeBigStyled>\n    );\n};\n\nfunction getChapterColor(chapter: IChapter) {\n    if (chapter.id === CONFIG.FIRST_CHAPTER_ID) return 'blue';\n    return 'white';\n}\n","import { GraphTreeBig } from './GraphTreeBig';\nexport default GraphTreeBig;\n","import { Col, Row } from 'antd';\nimport GraphTreeBig from 'components/GraphTreeBig';\nimport TopMenu from 'components/TopMenu';\nimport React from 'react';\nimport styled from 'styled-components';\n\ninterface GraphTreeBigPageProps {}\n\nconst GraphTreeBigPageStyled = styled.div`\n    // put some styles here\n    height: 100vh;\n    .graph-big_page-container {\n        height: calc(100% - 70px);\n        width: 100%;\n    }\n    .graph-big_tree-container {\n        width: 100%;\n    }\n`;\n\nexport const GraphTreeBigPage: React.FC<GraphTreeBigPageProps> = () => {\n    return (\n        <GraphTreeBigPageStyled>\n            <TopMenu />\n            <Row className='graph-big_page-container'>\n                <Col className='graph-big_tree-container'>\n                    <GraphTreeBig />\n                </Col>\n            </Row>\n        </GraphTreeBigPageStyled>\n    );\n};\n","import { GraphTreeBigPage } from './GraphTreeBigPage';\nexport default GraphTreeBigPage;\n"],"names":["GraphTreeBigStyled","styled","initialGraph","nodes","edges","options","layout","hierarchical","randomSeed","color","smooth","shape","height","width","events","select","event","getChapterColor","chapter","id","CONFIG","useAppSelector","state","gamebook","chapters","selectedId","React","graph","setGraph","chaptersIds","map","newArr","content","match","el","parseInt","element","length","from","to","flat","label","chapterNumber","title","slice","className","uuidv4","GraphTreeBigPageStyled","TopMenu"],"sourceRoot":""}
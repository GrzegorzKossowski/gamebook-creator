{"version":3,"file":"static/js/396.acb56fbf.chunk.js","mappings":"6TAYMA,EAAyBC,EAAAA,GAAAA,IAAH,qDCX5B,EDeiE,SAAC,GAG3D,IAFHC,EAEE,EAFFA,UACAC,EACE,EADFA,aAEA,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eACMC,GEjB0BC,EAAAA,EAAAA,MFkB5BC,GAAWC,EAAAA,EAAAA,MAiBf,OACI,SAACT,EAAD,WACI,SAAC,IAAD,CACIU,MAAM,sBACNC,QAAST,EACTU,SAVS,WACjBP,EAAKQ,cACLV,GAAa,IASLW,OAAQ,KAJZ,UAMI,UAAC,IAAD,CACIT,KAAMA,EACNU,OAAO,WACPC,aAAa,MACbC,aAAa,WACbC,SA5BC,SAACC,GACd,IAAQC,EAA8BD,EAA9BC,WAAYC,EAAkBF,EAAlBE,cACpBD,EAAWE,OACXD,EAAcC,OACdhB,GAAQiB,EAAAA,EAAAA,IAAuB,CAAEH,WAAAA,EAAYC,cAAAA,KAC7ChB,EAAKQ,cACLV,GAAa,GACbK,EAAS,YAsBGgB,cAAe,CACXJ,WAAY,WACZC,cAAe,4BARvB,WAWI,SAAC,SAAD,CACII,MAAK,gBACLC,KAAK,aACLC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+BAEb,CACIC,IAAK,EACLD,QAAS,qBAEb,CACIE,IAAK,GACLF,QAAS,sBAdrB,UAkBI,SAAC,IAAD,CAAOG,YAAY,oBAEvB,SAAC,SAAD,CACIP,MAAM,QACNQ,QAAQ,4CACRP,KAAK,gBACLC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,qCAEb,CACIC,IAAK,EACLD,QAAS,sBAEb,CACIE,IAAK,GACLF,QAAS,wBAfrB,UAmBI,SAAC,IAAD,CAAOG,YAAY,oCAEvB,SAAC,SAAD,WACI,SAAC,IAAD,CAAQE,KAAK,UAAUC,SAAS,SAAhC,8BGlFhBC,EAA2BC,EAAAA,EAAAA,KAAVC,GAAUD,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,OAE7BE,GAAqCtC,EAAAA,EAAAA,IAAOuC,EAAAA,EAAPvC,CAAH,kLCnBxC,ED4BiD,WAC7C,MACIwC,EAAAA,UAAe,GADnB,eAAOC,EAAP,KAA8BC,EAA9B,KAMA,OACI,iCACI,SAAC,IAAD,WACI,UAACJ,EAAD,CAAgBK,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAxC,WACI,SAACR,EAAD,CAAOS,MAAO,EAAd,+BACA,SAACX,EAAD,CAAMY,MAAO,CAAEC,aAAc,QAA7B,2CAGA,SAAC,IAAD,CAAKD,MAAO,CAAEE,MAAO,QAArB,UACI,SAAC,IAAD,CACIN,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GACxBK,GAAI,CAAEN,KAAM,EAAGC,OAAQ,GAF3B,UAII,UAAC,IAAD,CACIM,UAAU,WACVC,KAAK,SACLL,MAAO,CAAEM,QAAS,QAHtB,WAKI,SAAC,IAAD,CACIC,OAAK,EACLC,QAxBG,WAC/Bb,GAAyB,IAqBD,kBAMA,SAAC,IAAD,CAAQY,OAAK,EAACE,UAAQ,EAAtB,mBAGA,SAAC,IAAD,CAAQF,OAAK,EAACE,UAAQ,EAAtB,6BAGA,SAAC,IAAD,CAAQF,OAAK,EAACE,UAAQ,EAAtB,+BASpB,SAAC,EAAD,CACIvD,UAAWwC,EACXvC,aAAcwC","sources":["components/ModalNewGamebook/ModalNewGameBook.tsx","components/ModalNewGamebook/index.ts","redux/reduxHooks.ts","pages/HomePage/HomePage.tsx","pages/HomePage/index.tsx"],"sourcesContent":["import { Button, Form, Input, Modal } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { setGamebookInitialData } from 'redux/gameBookSlice';\nimport { useNavigate } from 'react-router-dom';\n\ninterface ModalNewGameBookProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\n\nconst ModalNewGameBookStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalNewGameBook: React.FC<ModalNewGameBookProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const [form] = Form.useForm();\n    const dispach = useAppDispatch();\n    let navigate = useNavigate();\n\n    const onFinish = (values: any) => {\n        const { authorName, gamebookTitle } = values;\n        authorName.trim();\n        gamebookTitle.trim();\n        dispach(setGamebookInitialData({ authorName, gamebookTitle }));\n        form.resetFields();\n        setIsVisible(false);\n        navigate(`/editor`);\n    };\n\n    const handleCancel = () => {\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalNewGameBookStyled>\n            <Modal\n                title='Create new gamebook'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n            >\n                <Form\n                    form={form}\n                    layout='vertical'\n                    autoComplete='off'\n                    requiredMark='optional'\n                    onFinish={onFinish}\n                    initialValues={{\n                        authorName: 'John Doe',\n                        gamebookTitle: 'New Journey of Halflings',\n                    }}\n                >\n                    <Form.Item\n                        label={`Author's name`}\n                        name='authorName'\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input author's name!\",\n                            },\n                            {\n                                min: 3,\n                                message: 'Name min 3 chars!',\n                            },\n                            {\n                                max: 30,\n                                message: 'Name max 30 chars',\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. John Doe' />\n                    </Form.Item>\n                    <Form.Item\n                        label='Title'\n                        tooltip='This is a required field, gamebook title.'\n                        name='gamebookTitle'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input gamebook main title!',\n                            },\n                            {\n                                min: 5,\n                                message: 'Min title 5 chars!',\n                            },\n                            {\n                                max: 50,\n                                message: 'Max title 50 chars!',\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. New Journey of Halflings' />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type='primary' htmlType='submit'>\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalNewGameBookStyled>\n    );\n};\n","import { ModalNewGameBook } from './ModalNewGameBook';\nexport default ModalNewGameBook;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React from 'react';\nimport styled from 'styled-components';\nimport {\n    Button,\n    Typography,\n    Row,\n    Col,\n    RowProps,\n    ColProps,\n    Space,\n    Tooltip,\n    Modal,\n    Form,\n    Input,\n} from 'antd';\nimport ModalNewGameBook from 'components/ModalNewGamebook';\n\ninterface HomePageProps {}\nconst { Text, Paragraph, Title } = Typography;\n\nconst HomePageStyled: React.FC<ColProps> = styled(Col)`\n    // put some styles here\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const HomePage: React.FC<HomePageProps> = () => {\n    const [isModalNewGameVisible, setIsModalNewGameVisible] =\n        React.useState(false);\n    const handleShowNewGameBookModal = () => {\n        setIsModalNewGameVisible(true);\n    };\n\n    return (\n        <>\n            <Row>\n                <HomePageStyled md={{ span: 12, offset: 6 }}>\n                    <Title level={1}>GameBook Creator</Title>\n                    <Text style={{ marginBottom: '2rem' }}>\n                        &copy; Grzegorz Kossowski 2022\n                    </Text>\n                    <Row style={{ width: '100%' }}>\n                        <Col\n                            md={{ span: 12, offset: 6 }}\n                            lg={{ span: 6, offset: 9 }}\n                        >\n                            <Space\n                                direction='vertical'\n                                size='middle'\n                                style={{ display: 'flex' }}\n                            >\n                                <Button\n                                    block\n                                    onClick={handleShowNewGameBookModal}\n                                >\n                                    New\n                                </Button>\n                                <Button block disabled>\n                                    Open\n                                </Button>\n                                <Button block disabled>\n                                    Import (*.gbf)\n                                </Button>\n                                <Button block disabled>\n                                    Docs\n                                </Button>\n                            </Space>\n                        </Col>\n                    </Row>\n                </HomePageStyled>\n            </Row>\n            {/* Modals */}\n            <ModalNewGameBook\n                isVisible={isModalNewGameVisible}\n                setIsVisible={setIsModalNewGameVisible}\n            />\n        </>\n    );\n};\n","import { HomePage } from './HomePage';\nexport default HomePage;\n"],"names":["ModalNewGameBookStyled","styled","isVisible","setIsVisible","Form","form","dispach","useDispatch","navigate","useNavigate","title","visible","onCancel","resetFields","footer","layout","autoComplete","requiredMark","onFinish","values","authorName","gamebookTitle","trim","setGamebookInitialData","initialValues","label","name","rules","required","message","min","max","placeholder","tooltip","type","htmlType","Text","Typography","Title","HomePageStyled","Col","React","isModalNewGameVisible","setIsModalNewGameVisible","md","span","offset","level","style","marginBottom","width","lg","direction","size","display","block","onClick","disabled"],"sourceRoot":""}
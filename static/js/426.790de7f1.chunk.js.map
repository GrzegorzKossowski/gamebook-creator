{"version":3,"file":"static/js/426.790de7f1.chunk.js","mappings":"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","sources":["components/ChaptersTree/ChapterStatus/index.ts","components/ChaptersTree/ChapterStatus/ChapterStatus.tsx","components/ChaptersTree/ChaptersTree.tsx","components/ChaptersTree/index.ts","components/ChapterEditor/ChapterEditor.tsx","components/ChapterEditor/index.ts","components/ModalEditMetadata/ModalEditMetadata.tsx","components/ModalEditMetadata/index.ts","components/TopMenu/TopMenu.tsx","components/TopMenu/index.ts","pages/EditorPage/EditorPage.tsx","redux/reduxHooks.ts"],"sourcesContent":["import { ChapterStatus } from './ChapterStatus';\nexport default ChapterStatus;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSkullCrossbones,\n    faTrophy,\n    faPlay,\n    faCircleCheck,\n    faCircleXmark,\n    faCircleStop,\n    faThumbTack,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Status } from 'configuration/interfaces';\n\nexport const ChapterStatus = ({ dead, end, fixed, ready, start, win }: Status) => {\n    return (\n        <>\n            {start && (\n                <FontAwesomeIcon\n                    icon={faPlay}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {fixed && (\n                <FontAwesomeIcon\n                    icon={faThumbTack}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {dead && (\n                <FontAwesomeIcon\n                    icon={faSkullCrossbones}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {end && (\n                <FontAwesomeIcon\n                    icon={faCircleStop}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                />\n            )}\n            {win && (\n                <FontAwesomeIcon\n                    icon={faTrophy}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='gold'\n                />\n            )}\n            {ready ? (\n                <FontAwesomeIcon\n                    icon={faCircleCheck}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='green'\n                />\n            ) : (\n                <FontAwesomeIcon\n                    icon={faCircleXmark}\n                    size='sm'\n                    style={{ marginRight: '10px' }}\n                    color='red'\n                />\n            )}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Input, Typography } from 'antd';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { setSelectedChapterId } from 'redux/gameBookSlice';\nimport ChapterStatus from './ChapterStatus';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSkullCrossbones,\n    faTrophy,\n    faPlay,\n    faCircleCheck,\n    faCircleXmark,\n    faCircleStop,\n    faThumbTack,\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface IChaptersTreeProps {}\nconst { Text } = Typography;\n\nconst ChaptersTreeStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    /* border: 1px solid #444; */\n    padding: 10px;\n\n    .tree-list {\n        overflow-y: auto;\n        height: calc(100% - 50px);\n        border: 1px solid #444;\n        margin: 10px 0;\n        list-style-type: none;\n        padding-left: 15px;\n        li {\n            width: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            font-size: 1.2rem;\n            color: #bbb;\n            margin: 10px 0px;\n            padding: 5px 0;\n            &:hover {\n                background-color: #222;\n                cursor: pointer;\n            }\n        }\n        &_selected {\n            background-color: #333;\n        }\n    }\n`;\n\nexport const ChaptersTree: React.FC<IChaptersTreeProps> = () => {\n    const { chapters, selectedId } = useAppSelector(state => state.gamebook);\n    const dispach = useAppDispatch();\n    const [selectedIdState, setSelectedIdState] = React.useState(selectedId);\n    const [searched, setSearched] = React.useState('');\n\n    const handleClick = (id: string) => {\n        setSelectedIdState(id);\n        dispach(setSelectedChapterId(id));\n    };\n\n    const handleInputChange = (e: React.ChangeEvent<{ value: string }>) => {\n        setSearched(e.target.value);\n    };\n\n    // redraw list if selected\n    React.useEffect(() => {\n        console.log(selectedIdState);\n        return () => {};\n    }, [selectedIdState]);\n\n    return (\n        <ChaptersTreeStyled>\n            <Input\n                placeholder='Filter paragraphs by title or number'\n                size='large'\n                allowClear\n                value={searched}\n                onChange={handleInputChange}\n            />\n            <ul className='tree-list'>\n                {chapters\n                    .filter(chapter => {\n                        return searched\n                            .split(' ')\n                            .some(\n                                a =>\n                                    chapter.title\n                                        .toLowerCase()\n                                        .trim()\n                                        .includes(a.toLowerCase().trim()) ||\n                                    parseInt(a.trim()) === chapter.chapterNumber\n                            );\n                    })\n                    .map(chapter => {\n                        return (\n                            <li\n                                key={chapter.id}\n                                className={`tree-list_chapter ${\n                                    chapter.id === selectedId\n                                        ? 'tree-list_selected'\n                                        : ''\n                                }`}\n                                onClick={() => handleClick(chapter.id)}\n                            >\n                                <Text>\n                                    {`${chapter.chapterNumber}) ${\n                                        chapter.title.length > 25\n                                            ? chapter.title.slice(0, 25) + '...'\n                                            : chapter.title\n                                    }`}\n                                </Text>\n                                <div>\n                                    {chapter?.status && (\n                                        <ChapterStatus {...chapter.status} />\n                                    )}\n                                </div>\n                            </li>\n                        );\n                    })}\n            </ul>\n        </ChaptersTreeStyled>\n    );\n};\n","import { ChaptersTree } from './ChaptersTree';\nexport default ChaptersTree;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    Switch,\n    Space,\n    Row,\n    Col,\n    Radio,\n} from 'antd';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSkullCrossbones,\n    faTrophy,\n    faPlay,\n    faCircleCheck,\n    faCircleXmark,\n    faCircleStop,\n    faThumbTack,\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface ChapterEditorProps {}\n\nconst ChapterEditorStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    textarea {\n        width: 100%;\n        height: 50vh;\n        padding: 12px 20px;\n        font-size: 1.2rem;\n        resize: none;\n    }\n`;\n\nexport const ChapterEditor: React.FC<ChapterEditorProps> = () => {\n    const { chapters, selectedId } = useAppSelector(state => state.gamebook);\n    const [form] = Form.useForm();\n\n    React.useEffect(() => {\n        let chapter;\n        if (selectedId) {\n            chapter = chapters.find(ch => ch.id === selectedId);\n            form.setFieldsValue({\n                id: chapter?.id,\n                chapterNumber: chapter?.chapterNumber,\n                title: chapter?.title,\n                content: chapter?.content,\n                win: chapter?.status?.win,\n                dead: chapter?.status?.dead,\n                fixed: chapter?.status?.fixed,\n                ready: chapter?.status?.ready,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedId]);\n\n    const onFinish = (values: any) => {\n        console.log(values);\n    };\n\n    return (\n        <ChapterEditorStyled>\n            <Form\n                form={form}\n                autoComplete='off'\n                layout='vertical'\n                size='large'\n                onFinish={onFinish}\n            >\n                <Row>\n                    <Col>\n                        <Form.Item name='chapterNumber'>\n                            <Input/>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item name='id'>\n                            <Input/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Form.Item label='Title' name='title'>\n                    <Input />\n                </Form.Item>\n                <Row gutter={16}>\n                    <Col>\n                        <Form.Item name='win' valuePropName='checked'>\n                            <Checkbox onChange={() => {}}>\n                                <FontAwesomeIcon icon={faTrophy} /> Win ending\n                            </Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item name='dead' valuePropName='checked'>\n                            <Checkbox onChange={() => {}} value='Dead ending'>\n                                <FontAwesomeIcon icon={faSkullCrossbones} />{' '}\n                                Dead ending\n                            </Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item name='fixed' valuePropName='checked'>\n                            <Checkbox onChange={() => {}} value='Fixed chapter'>\n                                <FontAwesomeIcon icon={faThumbTack} /> Fixed\n                                chapter\n                            </Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item name='ready' valuePropName='checked'>\n                            <Checkbox onChange={() => {}} value='Fixed chapter'>\n                                <FontAwesomeIcon icon={faCircleCheck} /> Is\n                                ready\n                            </Checkbox>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Form.Item\n                    label='Paragraph'\n                    name='content'\n                    className='chapter-editor_textarea'\n                >\n                    <Input.TextArea />\n                </Form.Item>\n                <Form.Item>\n                    <Button type='primary' htmlType='submit' disabled>\n                        Save\n                    </Button>\n                </Form.Item>\n            </Form>\n        </ChapterEditorStyled>\n    );\n};\n","import { ChapterEditor } from './ChapterEditor';\nexport default ChapterEditor;\n","import { Button, Col, Modal, Row, Typography } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { HighlightOutlined } from '@ant-design/icons';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { setGamebookAuthor, setGamebookTitle } from 'redux/gameBookSlice';\n\ninterface ModalEditMetadataProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\nconst { Paragraph, Title } = Typography;\n\nconst ModalEditMetadataStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalEditMetadata: React.FC<ModalEditMetadataProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n    const { authorName, gamebookTitle } = useAppSelector(\n        state => state.gamebook\n    );\n    const [author, setAuthor] = React.useState(authorName);\n    const [title, setTitle] = React.useState(gamebookTitle);\n\n    const handleMetadataChange = () => {\n        dispatch(setGamebookAuthor(author));\n        dispatch(setGamebookTitle(title));\n    };\n\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalEditMetadataStyled>\n            <Modal\n                title='View / Edit gamebook metadata'\n                visible={isVisible}\n                // onCancel={handleCancel}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Title level={5}>Author</Title>\n                <Paragraph\n                    editable={{\n                        icon: <HighlightOutlined />,\n                        tooltip: 'click to edit text',\n                        onChange: setAuthor,\n                    }}\n                >\n                    {author}\n                </Paragraph>\n                <Title level={5}>Title</Title>\n                <Paragraph\n                    editable={{\n                        icon: <HighlightOutlined />,\n                        tooltip: 'click to edit text',\n                        onChange: setTitle,\n                    }}\n                >\n                    {title}\n                </Paragraph>\n                <Row>\n                    <Col\n                        span={24}\n                        style={{ display: 'flex', justifyContent: 'end' }}\n                    >\n                        <Button onClick={handleMetadataChange}>Save</Button>\n                    </Col>\n                </Row>\n            </Modal>\n        </ModalEditMetadataStyled>\n    );\n};\n","import { ModalEditMetadata } from './ModalEditMetadata';\nexport default ModalEditMetadata","import { Menu, MenuProps } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faBook,\n    faFileLines,\n    faFilePdf,\n    faFileCode,\n    faChartPie,\n    faBookOpen,\n} from '@fortawesome/free-solid-svg-icons';\nimport ModalEditMetadata from 'components/ModalEditMetadata';\ninterface TopMenuProps {}\n\nconst TopMenuStyled = styled.div`\n    // put some styles here\n`;\n\nconst items: MenuProps['items'] = [\n    {\n        label: 'File',\n        key: 'File',\n        children: [\n            {\n                label: 'New book',\n                key: 'newBook',\n                icon: <FontAwesomeIcon icon={faBook} />,\n                disabled: true,\n            },\n            {\n                label: 'Oper existing',\n                key: 'openExisting',\n                icon: <FontAwesomeIcon icon={faFolderOpen} />,\n                disabled: true,\n            },\n        ],\n    },\n    {\n        label: 'Book',\n        key: 'bookOptions',\n        children: [\n            {\n                label: 'Add new chapter',\n                key: 'addNewChapter',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCirclePlus} />,\n            },\n            {\n                label: 'Schuffle chapters',\n                key: 'schuffleChapters',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faDice} />,\n            },\n            {\n                label: 'Statistics',\n                key: 'bookStatistics',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faChartPie} />,\n            },\n            {\n                label: 'Metadata',\n                key: 'metadata',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faBookOpen} />,\n            },\n        ],\n    },\n    {\n        label: 'Export',\n        key: 'exportBook',\n        // disabled: true,\n        children: [\n            {\n                label: 'Export to HTML',\n                key: 'exportHtml',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCode} />,\n            },\n            {\n                label: 'Export to PDF',\n                key: 'exportPdf',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFilePdf} />,\n            },\n            {\n                label: 'Export to TXT',\n                key: 'exportTxt',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileLines} />,\n            },\n        ],\n    },\n    {\n        label: 'Html Preview',\n        key: 'previewBook',\n        disabled: true,\n    },\n];\n\nexport const TopMenu: React.FC<TopMenuProps> = () => {\n    const [current, setCurrent] = React.useState('mail');\n    const [isModalEditMetadataVisible, setIsModalEditMetadataVisible] =\n        React.useState(false);\n\n    const onClick: MenuProps['onClick'] = e => {\n        console.log('click ', e);\n        setCurrent(e.key);\n    };\n    return (\n        <>\n            <TopMenuStyled>\n                <Menu\n                    onClick={onClick}\n                    selectedKeys={[current]}\n                    mode='horizontal'\n                    items={items}\n                />\n            </TopMenuStyled>\n            <ModalEditMetadata\n                isVisible={isModalEditMetadataVisible}\n                setIsVisible={setIsModalEditMetadataVisible}\n            />\n        </>\n    );\n};\n","import { TopMenu } from './TopMenu';\nexport default TopMenu;\n","import { Col, Menu, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faFileWord,\n} from '@fortawesome/free-solid-svg-icons';\nimport MainMenu from 'components/MainMenu';\nimport ChaptersTree from 'components/ChaptersTree';\nimport ChapterEditor from 'components/ChapterEditor';\nimport GraphTree from 'components/GraphTree';\nimport TopMenu from 'components/TopMenu';\n\ninterface IEditorPageProps {}\n\nconst EditorPageStyled = styled.div`\n    // put some styles here\n    height: 100vh;\n    /* border: 1px solid red; */\n    .sidebar__tree-container {\n        /* border: 1px solid blue; */\n        width: 25%;\n        height: calc(100vh - 86px);\n        overflow-y: hidden;\n    }\n    .graph__tree-container {\n        width: 25%;\n        height: calc(100vh - 86px);\n        /* background-color: #222; */\n    }\n    .editor-container {\n        padding: 10px;\n        width: 50%;\n    }\n`;\n\nconst EditorPage: React.FC<IEditorPageProps> = ({ ...restProps }) => {\n    return (\n        <EditorPageStyled>\n            <TopMenu />\n            <Row>\n                <Col\n                    className='sidebar__tree-container'\n                    xs={{ span: 24, order: 2 }}\n                    md={{ span: 12, order: 2 }}\n                    lg={{ span: 10, order: 1 }}\n                    xl={{ span: 6, order: 1 }}\n                >\n                    <ChaptersTree />\n                </Col>\n                <Col\n                    className='editor-container'\n                    xs={{ span: 24, order: 1 }}\n                    md={{ span: 24, order: 1 }}\n                    lg={{ span: 14, order: 2 }}\n                    xl={{ span: 12, order: 2 }}\n                >\n                    <ChapterEditor />\n                </Col>\n                <Col\n                    className='graph__tree-container'\n                    xs={{ span: 24, order: 3 }}\n                    md={{ span: 12, order: 3 }}\n                    lg={{ span: 24, order: 3 }}\n                    xl={{ span: 6, order: 3 }}\n                >\n                    {/* <GraphTree data={[]} /> */}\n                </Col>\n            </Row>\n        </EditorPageStyled>\n    );\n};\n\nexport default EditorPage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["dead","end","fixed","ready","start","win","icon","faPlay","size","style","marginRight","faThumbTack","faSkullCrossbones","faCircleStop","faTrophy","color","faCircleCheck","faCircleXmark","Text","Typography","ChaptersTreeStyled","styled","useAppSelector","state","gamebook","chapters","selectedId","dispach","useAppDispatch","React","selectedIdState","setSelectedIdState","searched","setSearched","console","log","placeholder","allowClear","value","onChange","e","target","className","filter","chapter","split","some","a","title","toLowerCase","trim","includes","parseInt","chapterNumber","map","id","onClick","setSelectedChapterId","length","slice","status","ChapterEditorStyled","Form","form","find","ch","setFieldsValue","content","autoComplete","layout","onFinish","values","name","label","gutter","valuePropName","type","htmlType","disabled","Paragraph","Title","ModalEditMetadataStyled","isVisible","setIsVisible","dispatch","authorName","gamebookTitle","author","setAuthor","setTitle","visible","footer","onCancel","level","editable","HighlightOutlined","tooltip","span","display","justifyContent","setGamebookAuthor","setGamebookTitle","TopMenuStyled","items","key","children","faBook","faFolderOpen","faFileCirclePlus","faDice","faChartPie","faBookOpen","faFileCode","faFilePdf","faFileLines","current","setCurrent","isModalEditMetadataVisible","setIsModalEditMetadataVisible","selectedKeys","mode","EditorPageStyled","xs","order","md","lg","xl","useDispatch","useSelector"],"sourceRoot":""}
{"version":3,"file":"static/js/211.71917007.chunk.js","mappings":"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","sources":["components/ModalEditMetadata/ModalEditMetadata.tsx","components/ModalEditMetadata/index.ts","components/MenuTop/MenuTop.tsx","components/MenuTop/index.ts","components/ModalNewChapter/ModalNewChapter.tsx","components/ModalNewChapter/index.ts","components/ModalShuffleChapter/ModalShuffleChapter.tsx","components/ModalShuffleChapter/index.ts","components/GraphTreeBig/GraphTreeBig.tsx","components/GraphTreeBig/index.ts","pages/GraphTreeBigPage/GraphTreeBigPage.tsx","pages/GraphTreeBigPage/index.ts","redux/reduxHooks.ts"],"sourcesContent":["import { Button, Col, Modal, Row, Space, Typography, notification } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { HighlightOutlined } from '@ant-design/icons';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { setGamebookAuthor, setGamebookTitle } from 'redux/gameBookSlice';\n\ninterface ModalEditMetadataProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\nconst { Paragraph, Title } = Typography;\n\nconst ModalEditMetadataStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalEditMetadata: React.FC<ModalEditMetadataProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n    const { authorName, gamebookTitle } = useAppSelector(\n        state => state.gamebook\n    );\n    const [author, setAuthor] = React.useState(authorName);\n    const [title, setTitle] = React.useState(gamebookTitle);\n\n    const handleMetadataChange = () => {\n        dispatch(setGamebookAuthor(author));\n        dispatch(setGamebookTitle(title));\n        notification['success']({\n            message: 'Metadata changed',\n            description: `${author}, creator of \"${title}\" saved.`,\n            placement: 'bottomRight',\n        });\n        setIsVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalEditMetadataStyled>\n            <Modal\n                title='View / Edit gamebook metadata'\n                visible={isVisible}\n                // onCancel={handleCancel}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Title level={5}>Author</Title>\n                <Paragraph\n                    editable={{\n                        icon: <HighlightOutlined />,\n                        tooltip: 'click to edit text',\n                        onChange: setAuthor,\n                    }}\n                >\n                    {author}\n                </Paragraph>\n                <Title level={5}>Title</Title>\n                <Paragraph\n                    editable={{\n                        icon: <HighlightOutlined />,\n                        tooltip: 'click to edit text',\n                        onChange: setTitle,\n                    }}\n                >\n                    {title}\n                </Paragraph>\n                <Row>\n                    <Col\n                        span={24}\n                        style={{ display: 'flex', justifyContent: 'end' }}\n                    >\n                        <Space direction='horizontal' size='large'>\n                            <Button onClick={handleCancel}>Cancel</Button>\n                            <Button\n                                type='primary'\n                                onClick={handleMetadataChange}\n                            >\n                                Save\n                            </Button>\n                        </Space>\n                    </Col>\n                </Row>\n            </Modal>\n        </ModalEditMetadataStyled>\n    );\n};\n","import { ModalEditMetadata } from './ModalEditMetadata';\nexport default ModalEditMetadata","import React from 'react';\nimport { Menu, MenuProps } from 'antd';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faBook,\n    faFileLines,\n    faFilePdf,\n    faFileCode,\n    faChartPie,\n    faBookOpen,\n} from '@fortawesome/free-solid-svg-icons';\nimport ModalEditMetadata from 'components/ModalEditMetadata';\nimport ModalNewChapter from 'components/ModalNewChapter';\nimport ModalShuffleChapter from 'components/ModalShuffleChapter';\ninterface MenuTopProps {}\n\nconst MenuTopStyled = styled.div`\n    // put some styles here\n`;\n\nconst items: MenuProps['items'] = [\n    {\n        label: 'File',\n        key: 'File',\n        disabled: true,\n        children: [\n            {\n                label: 'New book',\n                key: 'newBook',\n                icon: <FontAwesomeIcon icon={faBook} />,\n                disabled: true,\n            },\n            {\n                label: 'Oper existing',\n                key: 'openExisting',\n                icon: <FontAwesomeIcon icon={faFolderOpen} />,\n                disabled: true,\n            },\n        ],\n    },\n    {\n        label: 'Book',\n        key: 'bookOptions',\n        children: [\n            {\n                label: 'Add new chapter',\n                key: 'addNewChapter',\n                icon: <FontAwesomeIcon icon={faFileCirclePlus} />,\n            },\n            {\n                label: 'Schuffle chapters',\n                key: 'schuffleChapters',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faDice} />,\n            },\n            {\n                label: 'Statistics',\n                key: 'bookStatistics',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faChartPie} />,\n            },\n            {\n                label: 'Metadata',\n                key: 'metadata',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faBookOpen} />,\n            },\n        ],\n    },\n    {\n        label: 'Export',\n        key: 'exportBook',\n        disabled: true,\n        children: [\n            {\n                label: 'Export to HTML',\n                key: 'exportHtml',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCode} />,\n            },\n            {\n                label: 'Export to PDF',\n                key: 'exportPdf',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFilePdf} />,\n            },\n            {\n                label: 'Export to TXT',\n                key: 'exportTxt',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileLines} />,\n            },\n        ],\n    },\n    {\n        label: 'Html Preview',\n        key: 'previewBook',\n        disabled: false,\n    },\n    {\n        label: 'Graph',\n        key: 'graphBook',\n        disabled: true,\n    },\n    {\n        label: 'About',\n        key: 'aboutApp',\n        disabled: true,\n        children: [\n            {\n                label: 'Help',\n                key: 'appHelp',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCode} />,\n            },\n        ],\n    },\n];\n\nexport const MenuTop: React.FC<MenuTopProps> = () => {\n    let navigate = useNavigate();\n    const [current, setCurrent] = React.useState('');\n    const [isModalEditMetadataVisible, setIsModalEditMetadataVisible] =\n        React.useState(false);\n    const [isModalNewChapterVisible, setIsModalNewChapterVisible] =\n        React.useState(false);\n    const [isVisibleModalShuffleChapter, setIsVisibleModalShuffleChapter] =\n        React.useState(false);\n\n    const onClick: MenuProps['onClick'] = e => {\n        setCurrent(e.key);\n        switch (e.key) {\n            case 'addNewChapter':\n                setIsModalNewChapterVisible(true);\n                break;\n            case 'metadata':\n                setIsModalEditMetadataVisible(true);\n                break;\n            case 'schuffleChapters':\n                setIsVisibleModalShuffleChapter(true);\n                break;\n            case 'previewBook':\n                navigate(`/preview`);\n                break;\n            default:\n                break;\n        }\n    };\n    return (\n        <>\n            <MenuTopStyled>\n                <Menu\n                    onClick={onClick}\n                    selectedKeys={[current]}\n                    mode='horizontal'\n                    items={items}\n                />\n            </MenuTopStyled>\n            <ModalEditMetadata\n                isVisible={isModalEditMetadataVisible}\n                setIsVisible={setIsModalEditMetadataVisible}\n            />\n            <ModalNewChapter\n                isVisible={isModalNewChapterVisible}\n                setIsVisible={setIsModalNewChapterVisible}\n            />\n            <ModalShuffleChapter\n                isVisible={isVisibleModalShuffleChapter}\n                setIsVisible={setIsVisibleModalShuffleChapter}\n            />\n        </>\n    );\n};\n","import { MenuTop } from './MenuTop';\nexport default MenuTop;\n","import { Button, Form, Input, Modal, notification } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { createNewChapter } from 'redux/gameBookSlice';\nimport { CONFIG } from 'configuration';\n\ninterface ModalNewChapterProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\n\nconst ModalNewChapterStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalNewChapter: React.FC<ModalNewChapterProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const [form] = Form.useForm();\n    const dispach = useAppDispatch();\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n    const onFinish = (variables: any) => {\n        dispach(createNewChapter(variables.title));\n        notification['success']({\n            message: 'Chapter created',\n            description: `Chapter \"${variables.title}\" created. You can select it in chapter's tree on the left to edit it's content.`,\n            placement: 'bottomRight',\n            duration: 8,\n        });\n\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalNewChapterStyled>\n            <Modal\n                title='Create new Chapter'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n                width={700}\n            >\n                <Form\n                    form={form}\n                    autoComplete='off'\n                    layout='vertical'\n                    requiredMark='optional'\n                    size='large'\n                    onFinish={onFinish}\n                    initialValues={{\n                        title: 'New chapter very new title',\n                    }}\n                >\n                    <Form.Item\n                        name='title'\n                        rules={[\n                            { required: true, message: 'Enter the title!' },\n                            {\n                                min: CONFIG.CHAPTER_TITLE_LENGTH_MIN,\n                                message: `Min length ${CONFIG.CHAPTER_TITLE_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.CHAPTER_TITLE_LENGTH_MAX,\n                                message: `Max length ${CONFIG.CHAPTER_TITLE_LENGTH_MAX} chars!`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"ex. Entering dungeon's kitchen\" />\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Button htmlType='submit'>Create chapter</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalNewChapterStyled>\n    );\n};\n","import { ModalNewChapter } from './ModalNewChapter';\nexport default ModalNewChapter","import { Button, Modal, Space, notification, Typography } from 'antd';\nimport React from 'react';\nimport { shuffleChapters } from 'redux/gameBookSlice';\nimport { useAppDispatch } from 'redux/reduxHooks';\nimport styled from 'styled-components';\n\ninterface ModalShuffleChapterProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\n\nconst ModalShuffleChapterStyled = styled.div`\n    // put some styles here\n`;\n\nconst { Text } = Typography;\n\nexport const ModalShuffleChapter: React.FC<ModalShuffleChapterProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n    const handleDeleteChapter = () => {\n        dispatch(shuffleChapters());\n        notification['success']({\n            message: 'Shuffled chapters',\n            description: `Chapters shuffled.`,\n            placement: 'bottomRight',\n        });\n        setIsVisible(false);\n    };\n    return (\n        <ModalShuffleChapterStyled>\n            <Modal\n                title='Schuffle chapters'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n            >\n                <Text>Do you really want to shuffle chapters?</Text>\n                <div\n                    style={{\n                        textAlign: 'end',\n                    }}\n                >\n                    <Space size='middle'>\n                        <Button onClick={handleCancel}>Cancel</Button>\n                        <Button\n                            onClick={handleDeleteChapter}\n                            style={{\n                                color: '#fa8c16',\n                                borderColor: '#fa8c16',\n                            }}\n                        >\n                            Shuffle\n                        </Button>\n                    </Space>\n                </div>\n            </Modal>\n        </ModalShuffleChapterStyled>\n    );\n};\n","import { ModalShuffleChapter } from './ModalShuffleChapter';\nexport default ModalShuffleChapter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useAppSelector } from 'redux/reduxHooks';\nimport { IChapter, IGraph, IGraphEdge } from 'configuration/interfaces';\nimport { v4 as uuidv4 } from 'uuid';\n// import Graph from 'react-graph-vis';\nimport Graph from 'react-graph-vis';\nimport { CONFIG } from 'configuration';\n\ninterface GraphTreeBigProps {}\n\nconst GraphTreeBigStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    padding: 10px;\n    .graph-container {\n        background-color: #222;\n        height: 100%;\n        border: 1px solid #444;\n    }\n`;\n\nconst initialGraph = {\n    nodes: [],\n    edges: [],\n};\n\nconst options = {\n    layout: {\n        hierarchical: false,\n        randomSeed: 321,\n    },\n    edges: {\n        color: '#FFFFFF',\n        smooth: true,\n    },\n    nodes: {\n        shape: 'box',\n    },\n    height: '100%',\n    width: '100%',\n};\n\nconst events = {\n    select: function (event: any) {\n        var { nodes, edges } = event;\n    },\n};\n\nexport const GraphTreeBig: React.FC<GraphTreeBigProps> = () => {\n    const { chapters, selectedId } = useAppSelector(state => state.gamebook);\n    const [graph, setGraph] = React.useState<IGraph>(initialGraph);\n    React.useEffect(() => {\n        const chaptersIds = chapters.map(chapter => chapter.id);\n        const edges = chapters\n            .map(chapter => {\n                const newArr = chapter.content\n                    ?.match(/(\\d+)/g)\n                    ?.map(el => parseInt(el));\n                const newEdges = newArr?.map(element => {\n                    if (element > 0 && element < chapters.length) {\n                        return {\n                            from: chapter.id,\n                            to: chaptersIds[element - 1],\n                        };\n                    }\n                    return { from: chapter.id, to: 'NO_CHAPTER' };\n                });\n                return newEdges;\n            })\n            .flat() as IGraphEdge[];\n\n        setGraph({\n            nodes: [\n                ...chapters.map(chapter => {\n                    return {\n                        id: chapter.id,\n                        label: `${chapter.chapterNumber} ${chapter.title.slice(\n                            0,\n                            10\n                        )}`,\n                        title: `${chapter.chapterNumber} ${chapter.title.slice(\n                            0,\n                            10\n                        )}`,\n                        color: getChapterColor(chapter),\n                    };\n                }),\n                {\n                    id: 'NO_CHAPTER',\n                    label: 'NO CHAPTER',\n                    title: 'NO CHAPTER',\n                    color: 'red',\n                },\n            ],\n            edges: [...edges],\n        });\n    }, [chapters]);\n\n    return (\n        <GraphTreeBigStyled>\n            <div className='graph-container'>\n                <Graph\n                    key={uuidv4()}\n                    graph={graph}\n                    options={options}\n                    events={events}\n                />\n            </div>\n        </GraphTreeBigStyled>\n    );\n};\n\nfunction getChapterColor(chapter: IChapter) {\n    if (chapter.id === CONFIG.FIRST_CHAPTER_ID) return 'blue';\n    return 'white';\n}\n","import { GraphTreeBig } from './GraphTreeBig';\nexport default GraphTreeBig;\n","import { Col, Row } from 'antd';\nimport GraphTreeBig from 'components/GraphTreeBig';\nimport TopMenu from 'components/MenuTop';\nimport React from 'react';\nimport styled from 'styled-components';\n\ninterface GraphTreeBigPageProps {}\n\nconst GraphTreeBigPageStyled = styled.div`\n    // put some styles here\n    height: 100vh;\n    .graph-big_page-container {\n        height: calc(100% - 70px);\n        width: 100%;\n    }\n    .graph-big_tree-container {\n        width: 100%;\n    }\n`;\n\nexport const GraphTreeBigPage: React.FC<GraphTreeBigPageProps> = () => {\n    return (\n        <GraphTreeBigPageStyled>\n            <TopMenu />\n            <Row className='graph-big_page-container'>\n                <Col className='graph-big_tree-container'>\n                    <GraphTreeBig />\n                </Col>\n            </Row>\n        </GraphTreeBigPageStyled>\n    );\n};\n","import { GraphTreeBigPage } from './GraphTreeBigPage';\nexport default GraphTreeBigPage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["Paragraph","Typography","Title","ModalEditMetadataStyled","styled","isVisible","setIsVisible","dispatch","useAppDispatch","useAppSelector","state","gamebook","authorName","gamebookTitle","React","author","setAuthor","title","setTitle","handleCancel","visible","footer","onCancel","level","editable","icon","HighlightOutlined","tooltip","onChange","span","style","display","justifyContent","direction","size","onClick","type","setGamebookAuthor","setGamebookTitle","notification","message","description","placement","MenuTopStyled","items","label","key","disabled","children","faBook","faFolderOpen","faFileCirclePlus","faDice","faChartPie","faBookOpen","faFileCode","faFilePdf","faFileLines","navigate","useNavigate","current","setCurrent","isModalEditMetadataVisible","setIsModalEditMetadataVisible","isModalNewChapterVisible","setIsModalNewChapterVisible","isVisibleModalShuffleChapter","setIsVisibleModalShuffleChapter","e","selectedKeys","mode","ModalNewChapter","ModalShuffleChapter","ModalNewChapterStyled","Form","form","dispach","width","autoComplete","layout","requiredMark","onFinish","variables","createNewChapter","duration","resetFields","initialValues","name","rules","required","min","CONFIG","max","placeholder","textAlign","htmlType","ModalShuffleChapterStyled","Text","shuffleChapters","color","borderColor","GraphTreeBigStyled","initialGraph","nodes","edges","options","hierarchical","randomSeed","smooth","shape","height","events","select","event","getChapterColor","chapter","id","chapters","selectedId","graph","setGraph","chaptersIds","map","newArr","content","match","el","parseInt","element","length","from","to","flat","chapterNumber","slice","className","uuidv4","GraphTreeBigPageStyled","useDispatch","useSelector"],"sourceRoot":""}
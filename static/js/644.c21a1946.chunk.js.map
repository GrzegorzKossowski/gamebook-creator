{"version":3,"file":"static/js/644.c21a1946.chunk.js","mappings":"oVAaMA,EAAyBC,EAAAA,GAAAA,IAAH,qDCZ5B,EDgBiE,SAAC,GAG3D,IAFHC,EAEE,EAFFA,UACAC,EACE,EADFA,aAEA,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eACMC,GAAUC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,MAiBf,OACI,SAACT,EAAD,WACI,SAAC,IAAD,CACIU,MAAM,sBACNC,QAAST,EACTU,SAVS,WACjBP,EAAKQ,cACLV,GAAa,IASLW,OAAQ,KAJZ,UAMI,UAAC,IAAD,CACIT,KAAMA,EACNU,OAAO,WACPC,aAAa,MACbC,aAAa,WACbC,SA5BC,SAACC,GACd,IAAQC,EAA8BD,EAA9BC,WAAYC,EAAkBF,EAAlBE,cACpBD,EAAWE,OACXD,EAAcC,OACdhB,GAAQiB,EAAAA,EAAAA,IAAuB,CAAEH,WAAAA,EAAYC,cAAAA,KAC7ChB,EAAKQ,cACLV,GAAa,GACbK,EAAS,YAsBGgB,cAAe,CACXJ,WAAY,WACZC,cAAe,4BARvB,WAWI,SAAC,SAAD,CACII,MAAK,gBACLC,KAAK,aACLC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+BAEb,CACIC,IAAKC,EAAAA,EAAAA,sBACLF,QAAQ,YAAD,OAAcE,EAAAA,EAAAA,sBAAd,YAEX,CACIC,IAAKD,EAAAA,EAAAA,sBACLF,QAAQ,YAAD,OAAcE,EAAAA,EAAAA,sBAAd,YAdnB,UAkBI,SAAC,IAAD,CAAOE,YAAY,oBAEvB,SAAC,SAAD,CACIR,MAAM,QACNC,KAAK,gBACLC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,qCAEb,CACIC,IAAKC,EAAAA,EAAAA,yBACLF,QAAQ,YAAD,OAAcE,EAAAA,EAAAA,yBAAd,YAEX,CACIC,IAAKD,EAAAA,EAAAA,yBACLF,QAAQ,YAAD,OAAcE,EAAAA,EAAAA,yBAAd,YAdnB,UAkBI,SAAC,IAAD,CAAOE,YAAY,oCAEvB,SAAC,SAAD,CACIC,MAAO,CACHC,UAAW,OAFnB,UAKI,SAAC,IAAD,CAAQC,KAAK,UAAUC,SAAS,SAAhC,8BElGhBC,EAAgBC,EAAAA,EAAAA,KAAVC,EAAUD,EAAAA,EAAAA,MAElBE,GAAqCxC,EAAAA,EAAAA,IAAOyC,EAAAA,EAAPzC,CAAH,kLCPxC,EDgBiD,WAC7C,MACI0C,EAAAA,UAAe,GADnB,eAAOC,EAAP,KAA8BC,EAA9B,KAKMC,GAAO,IAAIC,MAAOC,cAExB,OACI,iCACI,SAAC,IAAD,CAAKC,QAAQ,SAAb,UACI,UAACR,EAAD,YACI,SAACD,EAAD,CAAOU,MAAO,EAAd,+BACA,SAACZ,EAAD,CAAMJ,MAAO,CAAEiB,aAAc,QAA7B,4HAIA,UAACb,EAAD,CAAMJ,MAAO,CAAEiB,aAAc,QAA7B,yCACmC,IAC9BL,EAAO,MAAP,YAAoBA,OAEzB,SAAC,IAAD,CAAKZ,MAAO,CAAEkB,MAAO,QAAUH,QAAQ,SAAvC,UACI,SAAC,IAAD,WACI,UAAC,IAAD,CAAOI,UAAU,WAAWC,KAAK,SAAjC,WACI,SAAC,IAAD,CACIC,OAAK,EACLC,QAvBG,WAC/BX,GAAyB,IAoBD,kBAMA,SAAC,IAAD,CAAQU,OAAK,EAACE,UAAQ,EAAtB,mBAGA,SAAC,IAAD,CAAQF,OAAK,EAACE,UAAQ,EAAtB,6BAGA,SAAC,IAAD,CAAQF,OAAK,EAACE,UAAQ,EAAtB,+BASpB,SAAC,EAAD,CACIvD,UAAW0C,EACXzC,aAAc0C,S,0FE5DjBtC,EAAiB,kBAAMmD,EAAAA,EAAAA,OACvBC,EAAkDC,EAAAA","sources":["components/ModalNewGamebook/ModalNewGameBook.tsx","components/ModalNewGamebook/index.ts","pages/HomePage/HomePage.tsx","pages/HomePage/index.tsx","redux/reduxHooks.ts"],"sourcesContent":["import { Button, Form, Input, Modal } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch } from 'redux/reduxHooks';\nimport { setGamebookInitialData } from 'redux/gameBookSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { CONFIG } from 'configuration';\n\ninterface ModalNewGameBookProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\n\nconst ModalNewGameBookStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalNewGameBook: React.FC<ModalNewGameBookProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const [form] = Form.useForm();\n    const dispach = useAppDispatch();\n    let navigate = useNavigate();\n\n    const onFinish = (values: any) => {\n        const { authorName, gamebookTitle } = values;\n        authorName.trim();\n        gamebookTitle.trim();\n        dispach(setGamebookInitialData({ authorName, gamebookTitle }));\n        form.resetFields();\n        setIsVisible(false);\n        navigate(`/editor`);\n    };\n\n    const handleCancel = () => {\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalNewGameBookStyled>\n            <Modal\n                title='Create new gamebook'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n            >\n                <Form\n                    form={form}\n                    layout='vertical'\n                    autoComplete='off'\n                    requiredMark='optional'\n                    onFinish={onFinish}\n                    initialValues={{\n                        authorName: 'John Doe',\n                        gamebookTitle: 'New Journey of Halflings',\n                    }}\n                >\n                    <Form.Item\n                        label={`Author's name`}\n                        name='authorName'\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input author's name!\",\n                            },\n                            {\n                                min: CONFIG.AUHOR_NAME_LENGTH_MIN,\n                                message: `Name min ${CONFIG.AUHOR_NAME_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.AUHOR_NAME_LENGTH_MAX,\n                                message: `Name max ${CONFIG.AUHOR_NAME_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. John Doe' />\n                    </Form.Item>\n                    <Form.Item\n                        label='Title'\n                        name='gamebookTitle'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input gamebook main title!',\n                            },\n                            {\n                                min: CONFIG.CHAPTER_TITLE_LENGTH_MIN,\n                                message: `Name min ${CONFIG.CHAPTER_TITLE_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.CHAPTER_TITLE_LENGTH_MAX,\n                                message: `Name max ${CONFIG.CHAPTER_TITLE_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. New Journey of Halflings' />\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Button type='primary' htmlType='submit'>\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalNewGameBookStyled>\n    );\n};\n","import { ModalNewGameBook } from './ModalNewGameBook';\nexport default ModalNewGameBook;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button, Typography, Row, Col, ColProps, Space } from 'antd';\nimport ModalNewGameBook from 'components/ModalNewGamebook';\n\ninterface HomePageProps {}\nconst { Text, Title } = Typography;\n\nconst HomePageStyled: React.FC<ColProps> = styled(Col)`\n    // put some styles here\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const HomePage: React.FC<HomePageProps> = () => {\n    const [isModalNewGameVisible, setIsModalNewGameVisible] =\n        React.useState(false);\n    const handleShowNewGameBookModal = () => {\n        setIsModalNewGameVisible(true);\n    };\n    const year = new Date().getFullYear();\n\n    return (\n        <>\n            <Row justify='center'>\n                <HomePageStyled>\n                    <Title level={1}>GameBook Creator</Title>\n                    <Text style={{ marginBottom: '1rem' }}>\n                        A gamebook is a work of printed fiction that allows the\n                        reader to participate in the story by making choices.\n                    </Text>\n                    <Text style={{ marginBottom: '2rem' }}>\n                        &copy; Grzegorz Kossowski 2022{' '}\n                        {year > 2022 && `- ${year}`}\n                    </Text>\n                    <Row style={{ width: '100%' }} justify='center'>\n                        <Col>\n                            <Space direction='vertical' size='middle'>\n                                <Button\n                                    block\n                                    onClick={handleShowNewGameBookModal}\n                                >\n                                    New\n                                </Button>\n                                <Button block disabled>\n                                    Open\n                                </Button>\n                                <Button block disabled>\n                                    Import (*.gbf)\n                                </Button>\n                                <Button block disabled>\n                                    Docs\n                                </Button>\n                            </Space>\n                        </Col>\n                    </Row>\n                </HomePageStyled>\n            </Row>\n            {/* Modals */}\n            <ModalNewGameBook\n                isVisible={isModalNewGameVisible}\n                setIsVisible={setIsModalNewGameVisible}\n            />\n        </>\n    );\n};\n","import { HomePage } from './HomePage';\nexport default HomePage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["ModalNewGameBookStyled","styled","isVisible","setIsVisible","Form","form","dispach","useAppDispatch","navigate","useNavigate","title","visible","onCancel","resetFields","footer","layout","autoComplete","requiredMark","onFinish","values","authorName","gamebookTitle","trim","setGamebookInitialData","initialValues","label","name","rules","required","message","min","CONFIG","max","placeholder","style","textAlign","type","htmlType","Text","Typography","Title","HomePageStyled","Col","React","isModalNewGameVisible","setIsModalNewGameVisible","year","Date","getFullYear","justify","level","marginBottom","width","direction","size","block","onClick","disabled","useDispatch","useAppSelector","useSelector"],"sourceRoot":""}
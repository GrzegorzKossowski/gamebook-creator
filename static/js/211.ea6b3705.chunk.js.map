{"version":3,"file":"static/js/211.ea6b3705.chunk.js","mappings":"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","sources":["components/ModalEditMetadata/ModalEditMetadata.tsx","components/ModalEditMetadata/index.ts","utils/plainTextFormatter.js","components/ModalExportToFile/ModalExportToFile.tsx","components/ModalExportToFile/index.ts","components/MenuTop/MenuTop.tsx","components/MenuTop/index.ts","components/ModalNewChapter/ModalNewChapter.tsx","components/ModalNewChapter/index.ts","components/ModalShuffleChapter/ModalShuffleChapter.tsx","components/ModalShuffleChapter/index.ts","components/GraphTreeBig/GraphTreeBig.tsx","components/GraphTreeBig/index.ts","pages/GraphTreeBigPage/GraphTreeBigPage.tsx","pages/GraphTreeBigPage/index.ts","redux/reduxHooks.ts"],"sourcesContent":["import { Button, Modal, Space, notification, Form, Input } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch, useAppSelector } from 'redux/reduxHooks';\nimport { CONFIG } from 'configuration';\nimport { updateMetadataDB } from 'redux/gameBookSlice';\n\ninterface ModalEditMetadataProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\n\nconst ModalEditMetadataStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalEditMetadata: React.FC<ModalEditMetadataProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n    const { authorName, gamebookTitle } = useAppSelector(\n        state => state.gamebook\n    );\n    const [form] = Form.useForm();\n\n    const onFinish = async (values: any) => {\n        const { authorName, gamebookTitle } = values;\n        authorName.trim();\n        gamebookTitle.trim();\n        dispatch(updateMetadataDB({ authorName, gamebookTitle }));\n        notification['success']({\n            message: 'Metadata changed',\n            description: `${authorName}, creator of \"${gamebookTitle}\" saved.`,\n            placement: 'bottomRight',\n        });\n        setIsVisible(false);\n        form.resetFields();\n    };\n    const handleCancel = () => {\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalEditMetadataStyled>\n            <Modal\n                title='View / Edit gamebook metadata'\n                visible={isVisible}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Form\n                    form={form}\n                    layout='vertical'\n                    autoComplete='off'\n                    requiredMark='optional'\n                    onFinish={onFinish}\n                    initialValues={{\n                        authorName,\n                        gamebookTitle,\n                    }}\n                >\n                    <Form.Item\n                        label={`Author's name`}\n                        name='authorName'\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input author's name!\",\n                            },\n                            {\n                                min: CONFIG.AUHOR_NAME_LENGTH_MIN,\n                                message: `Name min ${CONFIG.AUHOR_NAME_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.AUHOR_NAME_LENGTH_MAX,\n                                message: `Name max ${CONFIG.AUHOR_NAME_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. John Doe' />\n                    </Form.Item>\n                    <Form.Item\n                        label='Title'\n                        name='gamebookTitle'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input gamebook main title!',\n                            },\n                            {\n                                min: CONFIG.CHAPTER_TITLE_LENGTH_MIN,\n                                message: `Name min ${CONFIG.CHAPTER_TITLE_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.CHAPTER_TITLE_LENGTH_MAX,\n                                message: `Name max ${CONFIG.CHAPTER_TITLE_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder='ex. New Journey of Halflings' />\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Space size='middle'>\n                            <Button onClick={handleCancel}>Cancel</Button>\n                            <Button type='primary' htmlType='submit'>\n                                Submit\n                            </Button>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalEditMetadataStyled>\n    );\n};\n","import { ModalEditMetadata } from './ModalEditMetadata';\nexport default ModalEditMetadata","export const plainTextFormatter = ({\n    gamebookTitle,\n    authorName,\n    chapters,\n}) => {\n    let text = `${gamebookTitle}\\n\\n`\n    text += `by ${authorName}\\n\\n`\n    text += `=========================\\n\\n\\n`\n    chapters.forEach(chapter => {\n        text += `${chapter.chapterNumber}\\n\\n`\n        text += `${chapter.content}\\n\\n\\n\\n`\n    })\n    text += 'END'\n    return text\n};\n","//https://web.dev/file-system-access/\nimport {\n    Button,\n    Form,\n    Input,\n    Modal,\n    notification,\n    Radio,\n    RadioChangeEvent,\n    Space,\n} from 'antd';\nimport { CONFIG } from 'configuration';\nimport React from 'react';\nimport { useAppSelector } from 'redux/reduxHooks';\nimport styled from 'styled-components';\nimport { plainTextFormatter } from 'utils/plainTextFormatter';\n\ninterface ModalExportToFileProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\n\nconst ModalExportToFileStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalExportToFile: React.FC<ModalExportToFileProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const { gamebookTitle, authorName, chapters } = useAppSelector(\n        state => state.gamebook\n    );\n    const [form] = Form.useForm();\n    const [radioValue, setRadioValue] = React.useState(`text/plain`);\n    const onFinish = async (values: any) => {\n        let textToSaveAsBlob;\n        if (values.filetype === 'text/plain') {\n            textToSaveAsBlob = new Blob(\n                [\n                    plainTextFormatter({\n                        gamebookTitle,\n                        authorName,\n                        chapters,\n                    }),\n                ],\n                { type: 'text/plain' }\n            );\n        } else {\n            textToSaveAsBlob = new Blob(\n                [\n                    JSON.stringify({\n                        gamebookTitle,\n                        authorName,\n                        chapters,\n                    }),\n                ],\n                {\n                    type: 'application/json',\n                }\n            );\n        }\n        const textToSaveAsURL = window.URL.createObjectURL(textToSaveAsBlob);\n        const fileNameToSaveAs = gamebookTitle || `gamebook_file`;\n\n        const downloadLink = document.createElement('a');\n        downloadLink.download = fileNameToSaveAs;\n        downloadLink.innerHTML = 'Download File';\n        downloadLink.href = textToSaveAsURL;\n        downloadLink.onclick = (event: any) => {\n            document.body.removeChild(event.target);\n        };\n        downloadLink.style.display = 'none';\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        notification['success']({\n            message: `Saving...`,\n            description: `File ${fileNameToSaveAs} by ${authorName} saved.`,\n            placement: 'bottomRight',\n        });\n        setIsVisible(false);\n    };\n    const handleCancel = () => {\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    const onChange = (e: RadioChangeEvent) => {\n        setRadioValue(e.target.value);\n    };\n    return (\n        <ModalExportToFileStyled>\n            <Modal\n                title='Export to file'\n                visible={isVisible}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Form\n                    form={form}\n                    layout='vertical'\n                    autoComplete='off'\n                    requiredMark={false}\n                    onFinish={onFinish}\n                    initialValues={{ gamebookTitle, filetype: radioValue }}\n                >\n                    <Form.Item\n                        label={`Filename`}\n                        name='gamebookTitle'\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input file's name!\",\n                            },\n                            {\n                                min: CONFIG.FILE_NAME_LENGTH_MIN,\n                                message: `Filename min ${CONFIG.FILE_NAME_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.FILE_NAME_LENGTH_MAX,\n                                message: `Filename max ${CONFIG.FILE_NAME_LENGTH_MAX} chars`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder={`ex. ${gamebookTitle}`} />\n                    </Form.Item>\n                    <Form.Item label='Filetype' name='filetype'>\n                        <Radio.Group>\n                            <Radio value={`text/plain`}>txt</Radio>\n                            <Radio value={`application/json`}>json</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Space size='middle'>\n                            <Button onClick={handleCancel}>Cancel</Button>\n                            <Button type='primary' htmlType='submit'>\n                                Submit\n                            </Button>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalExportToFileStyled>\n    );\n};\n","import { ModalExportToFile } from './ModalExportToFile';\nexport default ModalExportToFile;\n","import React from 'react';\nimport { Menu, MenuProps } from 'antd';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileCirclePlus,\n    faFolderOpen,\n    faDice,\n    faBook,\n    faFileCode,\n    faChartPie,\n    faBookBookmark,\n    faFileSignature,\n    faFloppyDisk,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useAppDispatch } from 'redux/reduxHooks';\nimport { dropDB } from 'redux/gameBookSlice';\nimport ModalEditMetadata from 'components/ModalEditMetadata';\nimport ModalShuffleChapter from 'components/ModalShuffleChapter';\nimport ModalNewChapter from 'components/ModalNewChapter';\nimport ModalExportToFile from 'components/ModalExportToFile';\n\ninterface MenuTopProps {}\n\nconst MenuTopStyled = styled.div`\n    // put some styles here\n`;\n\nconst items: MenuProps['items'] = [\n    {\n        label: 'File',\n        key: 'File',\n        disabled: false,\n        children: [\n            {\n                label: 'New book',\n                key: 'newBook',\n                icon: <FontAwesomeIcon icon={faBook} />,\n                disabled: true,\n            },\n            {\n                label: 'Oper existing',\n                key: 'openExisting',\n                icon: <FontAwesomeIcon icon={faFolderOpen} />,\n                disabled: true,\n            },\n            {\n                label: 'Export',\n                key: 'exportBook',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faFloppyDisk} />,\n            },\n        ],\n    },\n    {\n        label: 'Book',\n        key: 'bookOptions',\n        children: [\n            {\n                label: 'Add new chapter',\n                key: 'addNewChapter',\n                icon: <FontAwesomeIcon icon={faFileCirclePlus} />,\n            },\n            {\n                label: 'Schuffle chapters',\n                key: 'schuffleChapters',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faDice} />,\n            },\n            {\n                label: 'Introduction',\n                key: 'introduction',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileSignature} />,\n            },\n            {\n                label: 'Metadata',\n                key: 'metadata',\n                disabled: false,\n                icon: <FontAwesomeIcon icon={faBookBookmark} />,\n            },\n            {\n                label: 'Statistics',\n                key: 'bookStatistics',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faChartPie} />,\n            },\n        ],\n    },\n    {\n        label: 'Html Preview',\n        key: 'previewBook',\n        disabled: false,\n    },\n    {\n        label: 'Play',\n        key: 'playBook',\n        disabled: false,\n    },\n    {\n        label: 'Graph',\n        key: 'graphBook',\n        disabled: true,\n    },\n    {\n        label: 'About',\n        key: 'aboutApp',\n        disabled: true,\n        children: [\n            {\n                label: 'Help',\n                key: 'appHelp',\n                disabled: true,\n                icon: <FontAwesomeIcon icon={faFileCode} />,\n            },\n        ],\n    },\n    {\n        label: 'DropDB',\n        key: 'dropDB',\n        disabled: true,\n        danger: true,\n    },\n];\n\nexport const MenuTop: React.FC<MenuTopProps> = () => {\n    let navigate = useNavigate();\n    const dispatch = useAppDispatch();\n    const [current, setCurrent] = React.useState('');\n    const [isModalEditMetadataVisible, setIsModalEditMetadataVisible] =\n        React.useState(false);\n    const [isModalNewChapterVisible, setIsModalNewChapterVisible] =\n        React.useState(false);\n    const [isVisibleModalShuffleChapter, setIsVisibleModalShuffleChapter] =\n        React.useState(false);\n    const [isVisibleModalExportToFile, setIsVisibleModalExportToFile] =\n        React.useState(false);\n\n    const onClick: MenuProps['onClick'] = e => {\n        setCurrent(e.key);\n        switch (e.key) {\n            case 'addNewChapter':\n                setIsModalNewChapterVisible(true);\n                break;\n            case 'metadata':\n                setIsModalEditMetadataVisible(true);\n                break;\n            case 'schuffleChapters':\n                setIsVisibleModalShuffleChapter(true);\n                break;\n            case 'exportBook':\n                setIsVisibleModalExportToFile(true);\n                break;\n            case 'previewBook':\n                navigate(`/preview`);\n                break;\n            case 'playBook':\n                navigate(`/play`);\n                break;\n            case 'dropDB':\n                dispatch(dropDB());\n                navigate(`/`);\n                break;\n            default:\n                break;\n        }\n    };\n    return (\n        <>\n            <MenuTopStyled>\n                <Menu\n                    onClick={onClick}\n                    selectedKeys={[current]}\n                    mode='horizontal'\n                    items={items}\n                />\n            </MenuTopStyled>\n            <ModalEditMetadata\n                isVisible={isModalEditMetadataVisible}\n                setIsVisible={setIsModalEditMetadataVisible}\n            />\n            <ModalNewChapter\n                isVisible={isModalNewChapterVisible}\n                setIsVisible={setIsModalNewChapterVisible}\n            />\n            <ModalShuffleChapter\n                isVisible={isVisibleModalShuffleChapter}\n                setIsVisible={setIsVisibleModalShuffleChapter}\n            />\n            <ModalExportToFile\n                isVisible={isVisibleModalExportToFile}\n                setIsVisible={setIsVisibleModalExportToFile}\n            />\n        </>\n    );\n};\n","import { MenuTop } from './MenuTop';\nexport default MenuTop;\n","import { Button, Form, Input, Modal, notification } from 'antd';\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch } from 'redux/reduxHooks';\nimport { addNewChapterDB } from 'redux/gameBookSlice';\nimport { CONFIG } from 'configuration';\n\ninterface ModalNewChapterProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\n\nconst ModalNewChapterStyled = styled.div`\n    // put some styles here\n`;\n\nexport const ModalNewChapter: React.FC<ModalNewChapterProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const [form] = Form.useForm();\n    const dispach = useAppDispatch();\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n    const onFinish = (variables: any) => {\n        // TODO: ogarnąć doubleclick na formie...\n        dispach(addNewChapterDB(variables.title));\n        notification['success']({\n            message: 'Chapter created',\n            description: `Chapter \"${variables.title}\" created. You can select it in chapter's tree on the left to edit it's content.`,\n            placement: 'bottomRight',\n            duration: 3,\n        });\n        form.resetFields();\n        setIsVisible(false);\n    };\n\n    return (\n        <ModalNewChapterStyled>\n            <Modal\n                title='Create new Chapter'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n                width={700}\n            >\n                <Form\n                    form={form}\n                    autoComplete='off'\n                    layout='vertical'\n                    requiredMark='optional'\n                    size='large'\n                    onFinish={onFinish}\n                    initialValues={{\n                        title: 'New chapter very new title',\n                    }}\n                >\n                    <Form.Item\n                        name='title'\n                        rules={[\n                            { required: true, message: 'Enter the title!' },\n                            {\n                                min: CONFIG.CHAPTER_TITLE_LENGTH_MIN,\n                                message: `Min length ${CONFIG.CHAPTER_TITLE_LENGTH_MIN} chars!`,\n                            },\n                            {\n                                max: CONFIG.CHAPTER_TITLE_LENGTH_MAX,\n                                message: `Max length ${CONFIG.CHAPTER_TITLE_LENGTH_MAX} chars!`,\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"ex. Entering dungeon's kitchen\" />\n                    </Form.Item>\n                    <Form.Item\n                        style={{\n                            textAlign: 'end',\n                        }}\n                    >\n                        <Button htmlType='submit'>Create chapter</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </ModalNewChapterStyled>\n    );\n};\n","import { ModalNewChapter } from './ModalNewChapter';\nexport default ModalNewChapter","import { Button, Modal, Space, notification, Typography } from 'antd';\nimport React from 'react';\nimport { shuffleChapters } from 'redux/gameBookSlice';\nimport { useAppDispatch } from 'redux/reduxHooks';\nimport styled from 'styled-components';\n\ninterface ModalShuffleChapterProps {\n    isVisible: boolean;\n    setIsVisible: Function;\n}\n\nconst ModalShuffleChapterStyled = styled.div`\n    // put some styles here\n`;\n\nconst { Text } = Typography;\n\nexport const ModalShuffleChapter: React.FC<ModalShuffleChapterProps> = ({\n    isVisible,\n    setIsVisible,\n}) => {\n    const dispatch = useAppDispatch();\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n    const handleDeleteChapter = () => {\n        dispatch(shuffleChapters());\n        notification['success']({\n            message: 'Shuffled chapters',\n            description: `Chapters shuffled.`,\n            placement: 'bottomRight',\n        });\n        setIsVisible(false);\n    };\n    return (\n        <ModalShuffleChapterStyled>\n            <Modal\n                title='Schuffle chapters'\n                visible={isVisible}\n                onCancel={handleCancel}\n                footer={null}\n            >\n                <Text>Do you really want to shuffle chapters?</Text>\n                <div\n                    style={{\n                        textAlign: 'end',\n                    }}\n                >\n                    <Space size='middle'>\n                        <Button onClick={handleCancel}>Cancel</Button>\n                        <Button\n                            onClick={handleDeleteChapter}\n                            style={{\n                                color: '#fa8c16',\n                                borderColor: '#fa8c16',\n                            }}\n                        >\n                            Shuffle\n                        </Button>\n                    </Space>\n                </div>\n            </Modal>\n        </ModalShuffleChapterStyled>\n    );\n};\n","import { ModalShuffleChapter } from './ModalShuffleChapter';\nexport default ModalShuffleChapter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useAppSelector } from 'redux/reduxHooks';\nimport { IChapter, IGraph, IGraphEdge } from 'configuration/interfaces';\nimport { v4 as uuidv4 } from 'uuid';\n// import Graph from 'react-graph-vis';\nimport Graph from 'react-graph-vis';\nimport { CONFIG } from 'configuration';\n\ninterface GraphTreeBigProps {}\n\nconst GraphTreeBigStyled = styled.div`\n    // put some styles here\n    height: 100%;\n    padding: 10px;\n    .graph-container {\n        background-color: #222;\n        height: 100%;\n        border: 1px solid #444;\n    }\n`;\n\nconst initialGraph = {\n    nodes: [],\n    edges: [],\n};\n\nconst options = {\n    layout: {\n        hierarchical: false,\n        randomSeed: 321,\n    },\n    edges: {\n        color: '#FFFFFF',\n        smooth: true,\n    },\n    nodes: {\n        shape: 'box',\n    },\n    height: '100%',\n    width: '100%',\n};\n\nconst events = {\n    select: function (event: any) {\n        var { nodes, edges } = event;\n    },\n};\n\nexport const GraphTreeBig: React.FC<GraphTreeBigProps> = () => {\n    const { chapters, selectedId } = useAppSelector(state => state.gamebook);\n    const [graph, setGraph] = React.useState<IGraph>(initialGraph);\n    React.useEffect(() => {\n        const chaptersIds = chapters.map(chapter => chapter.id);\n        const edges = chapters\n            .map(chapter => {\n                const newArr = chapter.content\n                    ?.match(/(\\d+)/g)\n                    ?.map(el => parseInt(el));\n                const newEdges = newArr?.map(element => {\n                    if (element > 0 && element < chapters.length) {\n                        return {\n                            from: chapter.id,\n                            to: chaptersIds[element - 1],\n                        };\n                    }\n                    return { from: chapter.id, to: 'NO_CHAPTER' };\n                });\n                return newEdges;\n            })\n            .flat() as IGraphEdge[];\n\n        setGraph({\n            nodes: [\n                ...chapters.map(chapter => {\n                    return {\n                        id: chapter.id,\n                        label: `${chapter.chapterNumber} ${chapter.title.slice(\n                            0,\n                            10\n                        )}`,\n                        title: `${chapter.chapterNumber} ${chapter.title.slice(\n                            0,\n                            10\n                        )}`,\n                        color: getChapterColor(chapter),\n                    };\n                }),\n                {\n                    id: 'NO_CHAPTER',\n                    label: 'NO CHAPTER',\n                    title: 'NO CHAPTER',\n                    color: 'red',\n                },\n            ],\n            edges: [...edges],\n        });\n    }, [chapters]);\n\n    return (\n        <GraphTreeBigStyled>\n            <div className='graph-container'>\n                <Graph\n                    key={uuidv4()}\n                    graph={graph}\n                    options={options}\n                    events={events}\n                />\n            </div>\n        </GraphTreeBigStyled>\n    );\n};\n\nfunction getChapterColor(chapter: IChapter) {\n    if (chapter.id === CONFIG.FIRST_CHAPTER_ID) return 'blue';\n    return 'white';\n}\n","import { GraphTreeBig } from './GraphTreeBig';\nexport default GraphTreeBig;\n","import { Col, Row } from 'antd';\nimport GraphTreeBig from 'components/GraphTreeBig';\nimport TopMenu from 'components/MenuTop';\nimport React from 'react';\nimport styled from 'styled-components';\n\ninterface GraphTreeBigPageProps {}\n\nconst GraphTreeBigPageStyled = styled.div`\n    // put some styles here\n    height: 100vh;\n    .graph-big_page-container {\n        height: calc(100% - 70px);\n        width: 100%;\n    }\n    .graph-big_tree-container {\n        width: 100%;\n    }\n`;\n\nexport const GraphTreeBigPage: React.FC<GraphTreeBigPageProps> = () => {\n    return (\n        <GraphTreeBigPageStyled>\n            <TopMenu />\n            <Row className='graph-big_page-container'>\n                <Col className='graph-big_tree-container'>\n                    <GraphTreeBig />\n                </Col>\n            </Row>\n        </GraphTreeBigPageStyled>\n    );\n};\n","import { GraphTreeBigPage } from './GraphTreeBigPage';\nexport default GraphTreeBigPage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["ModalEditMetadataStyled","styled","isVisible","setIsVisible","dispatch","useAppDispatch","useAppSelector","state","gamebook","authorName","gamebookTitle","Form","form","onFinish","values","trim","updateMetadataDB","notification","message","description","placement","resetFields","handleCancel","title","visible","footer","onCancel","layout","autoComplete","requiredMark","initialValues","label","name","rules","required","min","CONFIG","max","placeholder","style","textAlign","size","onClick","type","htmlType","plainTextFormatter","chapters","text","forEach","chapter","chapterNumber","content","ModalExportToFileStyled","React","radioValue","textToSaveAsBlob","filetype","Blob","JSON","stringify","textToSaveAsURL","window","URL","createObjectURL","fileNameToSaveAs","downloadLink","document","createElement","download","innerHTML","href","onclick","event","body","removeChild","target","display","appendChild","click","value","MenuTopStyled","items","key","disabled","children","icon","faBook","faFolderOpen","faFloppyDisk","faFileCirclePlus","faDice","faFileSignature","faBookBookmark","faChartPie","faFileCode","danger","navigate","useNavigate","current","setCurrent","isModalEditMetadataVisible","setIsModalEditMetadataVisible","isModalNewChapterVisible","setIsModalNewChapterVisible","isVisibleModalShuffleChapter","setIsVisibleModalShuffleChapter","isVisibleModalExportToFile","setIsVisibleModalExportToFile","e","dropDB","selectedKeys","mode","ModalNewChapter","ModalShuffleChapter","ModalNewChapterStyled","dispach","width","variables","addNewChapterDB","duration","ModalShuffleChapterStyled","Text","Typography","shuffleChapters","color","borderColor","GraphTreeBigStyled","initialGraph","nodes","edges","options","hierarchical","randomSeed","smooth","shape","height","events","select","getChapterColor","id","selectedId","graph","setGraph","chaptersIds","map","newArr","match","el","parseInt","element","length","from","to","flat","slice","className","uuidv4","GraphTreeBigPageStyled","useDispatch","useSelector"],"sourceRoot":""}